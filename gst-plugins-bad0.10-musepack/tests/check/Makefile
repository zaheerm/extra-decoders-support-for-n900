# Makefile.in generated by automake 1.8.5 from Makefile.am.
# tests/check/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = elements/aacparse.c elements/amrparse.c $(elements_camerabin_SOURCES) elements/legacyresample.c elements/mpeg2enc.c elements/mplex.c elements/mxfdemux.c elements/mxfmux.c elements/neonhttpsrc.c elements/ofa.c elements/qtmux.c elements/rtpbin.c $(elements_rtpbin_buffer_list_SOURCES) elements/selector.c elements/shapewipe.c elements/timidity.c generic/states.c pipelines/metadata.c pipelines/mxf.c

srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/gst-plugins-bad
pkglibdir = $(libdir)/gst-plugins-bad
pkgincludedir = $(includedir)/gst-plugins-bad
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /scratchbox/tools/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = arm-unknown-linux-gnueabi
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/common/check.mak
check_PROGRAMS = generic/states$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4) \
	$(am__EXEEXT_5) elements/aacparse$(EXEEXT) \
	elements/amrparse$(EXEEXT) elements/camerabin$(EXEEXT) \
	elements/legacyresample$(EXEEXT) elements/qtmux$(EXEEXT) \
	elements/rtpbin$(EXEEXT) elements/rtpbin_buffer_list$(EXEEXT) \
	elements/selector$(EXEEXT) elements/shapewipe$(EXEEXT) \
	elements/mxfdemux$(EXEEXT) elements/mxfmux$(EXEEXT) \
	pipelines/mxf$(EXEEXT) $(am__EXEEXT_6)
subdir = tests/check
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/common/m4/as-ac-expand.m4 \
	$(top_srcdir)/common/m4/as-auto-alt.m4 \
	$(top_srcdir)/common/m4/as-compiler-flag.m4 \
	$(top_srcdir)/common/m4/as-objc.m4 \
	$(top_srcdir)/common/m4/as-python.m4 \
	$(top_srcdir)/common/m4/as-scrub-include.m4 \
	$(top_srcdir)/common/m4/as-version.m4 \
	$(top_srcdir)/common/m4/ax_create_stdint_h.m4 \
	$(top_srcdir)/common/m4/gst-arch.m4 \
	$(top_srcdir)/common/m4/gst-args.m4 \
	$(top_srcdir)/common/m4/gst-check.m4 \
	$(top_srcdir)/common/m4/gst-dowhile.m4 \
	$(top_srcdir)/common/m4/gst-error.m4 \
	$(top_srcdir)/common/m4/gst-feature.m4 \
	$(top_srcdir)/common/m4/gst-gettext.m4 \
	$(top_srcdir)/common/m4/gst-glib2.m4 \
	$(top_srcdir)/common/m4/gst-plugin-docs.m4 \
	$(top_srcdir)/common/m4/gst-plugindir.m4 \
	$(top_srcdir)/common/m4/gst-x11.m4 \
	$(top_srcdir)/common/m4/gst.m4 \
	$(top_srcdir)/common/m4/gtk-doc.m4 \
	$(top_srcdir)/common/m4/pkg.m4 \
	$(top_srcdir)/common/m4/shave.m4 $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/gst-alsa.m4 $(top_srcdir)/m4/gst-fionread.m4 \
	$(top_srcdir)/m4/gst-sdl.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
#am__EXEEXT_1 = elements/mpeg2enc$(EXEEXT)
#am__EXEEXT_2 = elements/mplex$(EXEEXT)
#am__EXEEXT_3 = elements/neonhttpsrc$(EXEEXT)
#am__EXEEXT_4 = elements/ofa$(EXEEXT)
#am__EXEEXT_5 = elements/timidity$(EXEEXT)
#am__EXEEXT_6 = pipelines/metadata$(EXEEXT)
elements_aacparse_SOURCES = elements/aacparse.c
elements_aacparse_OBJECTS = aacparse.$(OBJEXT)
elements_aacparse_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
elements_aacparse_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
elements_amrparse_SOURCES = elements/amrparse.c
elements_amrparse_OBJECTS = amrparse.$(OBJEXT)
elements_amrparse_LDADD = $(LDADD)
elements_amrparse_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_elements_camerabin_OBJECTS =  \
	elements_camerabin-camerabin.$(OBJEXT)
elements_camerabin_OBJECTS = $(am_elements_camerabin_OBJECTS)
elements_camerabin_DEPENDENCIES = $(top_builddir)/gst-libs/gst/interfaces/libgstphotography-0.10.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
elements_legacyresample_SOURCES = elements/legacyresample.c
elements_legacyresample_OBJECTS = legacyresample.$(OBJEXT)
elements_legacyresample_LDADD = $(LDADD)
elements_legacyresample_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_mpeg2enc_SOURCES = elements/mpeg2enc.c
elements_mpeg2enc_OBJECTS = mpeg2enc.$(OBJEXT)
elements_mpeg2enc_LDADD = $(LDADD)
elements_mpeg2enc_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_mplex_SOURCES = elements/mplex.c
elements_mplex_OBJECTS = mplex.$(OBJEXT)
elements_mplex_LDADD = $(LDADD)
elements_mplex_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_mxfdemux_SOURCES = elements/mxfdemux.c
elements_mxfdemux_OBJECTS = mxfdemux.$(OBJEXT)
elements_mxfdemux_LDADD = $(LDADD)
elements_mxfdemux_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_mxfmux_SOURCES = elements/mxfmux.c
elements_mxfmux_OBJECTS = mxfmux.$(OBJEXT)
elements_mxfmux_LDADD = $(LDADD)
elements_mxfmux_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_neonhttpsrc_SOURCES = elements/neonhttpsrc.c
elements_neonhttpsrc_OBJECTS = neonhttpsrc.$(OBJEXT)
elements_neonhttpsrc_LDADD = $(LDADD)
elements_neonhttpsrc_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_ofa_SOURCES = elements/ofa.c
elements_ofa_OBJECTS = ofa.$(OBJEXT)
elements_ofa_LDADD = $(LDADD)
elements_ofa_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_qtmux_SOURCES = elements/qtmux.c
elements_qtmux_OBJECTS = qtmux.$(OBJEXT)
elements_qtmux_LDADD = $(LDADD)
elements_qtmux_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_rtpbin_SOURCES = elements/rtpbin.c
elements_rtpbin_OBJECTS = rtpbin.$(OBJEXT)
elements_rtpbin_LDADD = $(LDADD)
elements_rtpbin_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_elements_rtpbin_buffer_list_OBJECTS =  \
	elements_rtpbin_buffer_list-rtpbin_buffer_list.$(OBJEXT)
elements_rtpbin_buffer_list_OBJECTS =  \
	$(am_elements_rtpbin_buffer_list_OBJECTS)
elements_rtpbin_buffer_list_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
elements_selector_SOURCES = elements/selector.c
elements_selector_OBJECTS = selector.$(OBJEXT)
elements_selector_LDADD = $(LDADD)
elements_selector_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_shapewipe_SOURCES = elements/shapewipe.c
elements_shapewipe_OBJECTS = shapewipe.$(OBJEXT)
elements_shapewipe_LDADD = $(LDADD)
elements_shapewipe_DEPENDENCIES = $(am__DEPENDENCIES_1)
elements_timidity_SOURCES = elements/timidity.c
elements_timidity_OBJECTS = elements_timidity-timidity.$(OBJEXT)
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
elements_timidity_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
generic_states_SOURCES = generic/states.c
generic_states_OBJECTS = states.$(OBJEXT)
generic_states_LDADD = $(LDADD)
generic_states_DEPENDENCIES = $(am__DEPENDENCIES_1)
pipelines_metadata_SOURCES = pipelines/metadata.c
pipelines_metadata_OBJECTS = metadata.$(OBJEXT)
pipelines_metadata_LDADD = $(LDADD)
pipelines_metadata_DEPENDENCIES = $(am__DEPENDENCIES_1)
pipelines_mxf_SOURCES = pipelines/mxf.c
pipelines_mxf_OBJECTS = mxf.$(OBJEXT)
pipelines_mxf_LDADD = $(LDADD)
pipelines_mxf_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
#DEP_FILES = ./$(DEPDIR)/aacparse.Po \
#	./$(DEPDIR)/amrparse.Po \
#	./$(DEPDIR)/elements_camerabin-camerabin.Po \
#	./$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Po \
#	./$(DEPDIR)/elements_timidity-timidity.Po \
#	./$(DEPDIR)/legacyresample.Po \
#	./$(DEPDIR)/metadata.Po ./$(DEPDIR)/mpeg2enc.Po \
#	./$(DEPDIR)/mplex.Po ./$(DEPDIR)/mxf.Po \
#	./$(DEPDIR)/mxfdemux.Po ./$(DEPDIR)/mxfmux.Po \
#	./$(DEPDIR)/neonhttpsrc.Po ./$(DEPDIR)/ofa.Po \
#	./$(DEPDIR)/qtmux.Po ./$(DEPDIR)/rtpbin.Po \
#	./$(DEPDIR)/selector.Po ./$(DEPDIR)/shapewipe.Po \
#	./$(DEPDIR)/states.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = elements/aacparse.c elements/amrparse.c \
	$(elements_camerabin_SOURCES) elements/legacyresample.c \
	elements/mpeg2enc.c elements/mplex.c elements/mxfdemux.c \
	elements/mxfmux.c elements/neonhttpsrc.c elements/ofa.c \
	elements/qtmux.c elements/rtpbin.c \
	$(elements_rtpbin_buffer_list_SOURCES) elements/selector.c \
	elements/shapewipe.c elements/timidity.c generic/states.c \
	pipelines/metadata.c pipelines/mxf.c
DIST_SOURCES = elements/aacparse.c elements/amrparse.c \
	$(elements_camerabin_SOURCES) elements/legacyresample.c \
	elements/mpeg2enc.c elements/mplex.c elements/mxfdemux.c \
	elements/mxfmux.c elements/neonhttpsrc.c elements/ofa.c \
	elements/qtmux.c elements/rtpbin.c \
	$(elements_rtpbin_buffer_list_SOURCES) elements/selector.c \
	elements/shapewipe.c elements/timidity.c generic/states.c \
	pipelines/metadata.c pipelines/mxf.c
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/tom/gst-plugins-bad0.10-musepack-0.10.13-git209/missing --run aclocal-1.8
ACLOCAL_AMFLAGS = -I m4 -I common/m4
ACMENC_CFLAGS = 
ACMMP3DEC_CFLAGS = 
ALSA_CFLAGS = 
ALSA_LIBS = 
AMDEP_FALSE = 
AMDEP_TRUE = #
AMRWB_LIBS = 
AMTAR = ${SHELL} /home/tom/gst-plugins-bad0.10-musepack-0.10.13-git209/missing --run tar
AM_MAKEFLAGS = 
APEXSINK_CFLAGS = 
APEXSINK_LIBS = 
AR = ar
AS = as
ASSRENDER_CFLAGS = 
ASSRENDER_LIBS = 
AUTOCONF = ${SHELL} /home/tom/gst-plugins-bad0.10-musepack-0.10.13-git209/missing --run autoconf
AUTOHEADER = ${SHELL} /home/tom/gst-plugins-bad0.10-musepack-0.10.13-git209/missing --run autoheader
AUTOMAKE = ${SHELL} /home/tom/gst-plugins-bad0.10-musepack-0.10.13-git209/missing --run automake-1.8
AWK = gawk
BUILD_EXAMPLES_FALSE = 
BUILD_EXAMPLES_TRUE = #
BUILD_EXPERIMENTAL_FALSE = #
BUILD_EXPERIMENTAL_TRUE = 
BUILD_EXTERNAL_FALSE = #
BUILD_EXTERNAL_TRUE = 
BZ2_LIBS = 
CC = cc
CCASFLAGS = 
CCDEPMODE = depmode=none
CDAUDIO_CFLAGS = 
CDAUDIO_CONFIG = 
CDAUDIO_LIBS = 
CELT_CFLAGS = 
CELT_LIBS = 
CFLAGS = -DG_DISABLE_CAST_CHECKS -DGST_DISABLE_GST_DEBUG=1 -O2
CPP = cc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -g -Wall -O2
CYGPATH_W = echo
DCCP_LIBS =  -lpthread
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPRECATED_CFLAGS = -DGST_DISABLE_DEPRECATED
DIRAC_CFLAGS = 
DIRAC_LIBS = 
DIRECTDRAW_CFLAGS = 
DIRECTDRAW_LDFLAGS = 
DIRECTDRAW_LIBS = 
DIRECTFB_CFLAGS = 
DIRECTFB_LIBS = 
DIVXDEC_LIBS = 
DIVXENC_LIBS = 
DLLTOOL = dlltool
DSYMUTIL = 
DTS_LIBS = 
DVDNAV_CFLAGS = 
DVDNAV_CONFIG = 
DVDNAV_LIBS = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /scratchbox/tools/bin/grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
ENABLE_PLUGIN_DOCS_FALSE = 
ENABLE_PLUGIN_DOCS_TRUE = #
ERROR_CFLAGS = -Wall -Wdeclaration-after-statement -Wpointer-arith -Werror
ERROR_CXXFLAGS = -Wall -Werror -Wno-non-virtual-dtor
EXEEXT = 
EXIF_CFLAGS = 
EXIF_LIBS = 
F77 = 
FAAC_LIBS = 
FAAD_IS_NEAAC = 
FAAD_LIBS = 
FC = 
FFLAGS = 
GCOV = 
GCOV_CFLAGS = 
GCOV_LIBS = 
GETTEXT_PACKAGE = gst-plugins-bad-0.10
GIO_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GIO_LIBS = -lgio-2.0 -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
GLADE_CFLAGS = -DMAEMO_CHANGES -I/usr/include/libglade-2.0 -I/usr/include/gtk-2.0 -I/usr/include/libxml2 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
GLADE_LIBS = -lglade-2.0 -lgtk-x11-2.0 -lxml2 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
GLIB_LIBS = -pthread -lgobject-2.0 -lgthread-2.0 -lrt -lgmodule-2.0 -lglib-2.0  
GLIB_PREFIX = /usr
GLIB_REQ = 2.6
GMSGFMT = /scratchbox/tools/bin/msgfmt
GMYTH_CFLAGS = 
GMYTH_LIBS = 
GREP = /scratchbox/tools/bin/grep
GSM_LIBS = 
GSTPB_PLUGINS_DIR = /usr/lib/gstreamer-0.10
GSTPB_PREFIX = /usr
GST_ALL_LDFLAGS = -no-undefined
GST_BASE_CFLAGS = -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2  
GST_BASE_LIBS = -pthread -lgstbase-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_CFLAGS = -I$(top_srcdir)/gst-libs -I$(top_builddir)/gst-libs -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2   $(GST_OPTION_CFLAGS)
GST_CHECK_CFLAGS = -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2  
GST_CHECK_LIBS = -pthread -lgstcheck-0.10 -lcheck_pic -lm -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_CONTROLLER_CFLAGS = -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2  
GST_CONTROLLER_LIBS = -pthread -lgstcontroller-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_CXXFLAGS = -I$(top_srcdir)/gst-libs -I$(top_builddir)/gst-libs  $(GST_OPTION_CXXFLAGS)
GST_GCOV_ENABLED_FALSE = 
GST_GCOV_ENABLED_TRUE = #
GST_GDP_CFLAGS = -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2  
GST_GDP_LIBS = -pthread -lgstdataprotocol-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_LEVEL_DEFAULT = GST_LEVEL_ERROR
GST_LIBS = -pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_LICENSE = LGPL
GST_MAJORMINOR = 0.10
GST_OPTION_CFLAGS = $(ERROR_CFLAGS) $(DEBUG_CFLAGS) $(PROFILE_CFLAGS) $(GCOV_CFLAGS) $(OPT_CFLAGS) $(DEPRECATED_CFLAGS)
GST_OPTION_CXXFLAGS = $(ERROR_CXXFLAGS) $(DEBUG_CFLAGS) $(PROFILE_CFLAGS) $(GCOV_CFLAGS) $(OPT_CFLAGS) $(DEPRECATED_CFLAGS)
GST_PACKAGE_NAME = GStreamer MusePack Plugin (Maemo)
GST_PACKAGE_ORIGIN = http://maemo.org
GST_PLUGINS_ALL =  aacparse adpcmdec aiffparse amrparse autoconvert camerabin legacyresample bayer cdxaparse dccp debugutils dtmf dvdspu festival freeze frei0r h264parse hdvparse id3tag librfb liveadder mpegdemux mpegtsmux mpeg4videoparse mpegvideoparse mve mxf nsf nuvdemux pcapparse qtmux rawparse real rtpmanager rtpmux scaletempo sdp selector shapewipe siren speed subenc stereo tta valve videosignal vmnc xdgmime
GST_PLUGINS_BASE_CFLAGS = -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2  
GST_PLUGINS_BASE_LIBS = -pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_PLUGINS_DIR = /usr/lib/gstreamer-0.10
GST_PLUGINS_SELECTED =                                                                                                   
GST_PLUGIN_LDFLAGS = -module -avoid-version -export-symbols-regex '^_*gst_plugin_desc$$' -no-undefined
GST_PREFIX = /usr
GST_TOOLS_DIR = $(top_builddir)/tools
GTKDOC_CHECK = /usr/bin/gtkdoc-check
GTK_CFLAGS = -DMAEMO_CHANGES -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12  
GTK_DOC_USE_LIBTOOL_FALSE = #
GTK_DOC_USE_LIBTOOL_TRUE = 
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lpangocairo-1.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
HAVE_AMRWB = 
HAVE_BZ2 = 
HAVE_CPU_ALPHA_FALSE = 
HAVE_CPU_ALPHA_TRUE = #
HAVE_CPU_ARM_FALSE = #
HAVE_CPU_ARM_TRUE = 
HAVE_CPU_CRISV32_FALSE = 
HAVE_CPU_CRISV32_TRUE = #
HAVE_CPU_CRIS_FALSE = 
HAVE_CPU_CRIS_TRUE = #
HAVE_CPU_HPPA_FALSE = 
HAVE_CPU_HPPA_TRUE = #
HAVE_CPU_I386_FALSE = 
HAVE_CPU_I386_TRUE = #
HAVE_CPU_IA64_FALSE = 
HAVE_CPU_IA64_TRUE = #
HAVE_CPU_M68K_FALSE = 
HAVE_CPU_M68K_TRUE = #
HAVE_CPU_MIPS_FALSE = 
HAVE_CPU_MIPS_TRUE = #
HAVE_CPU_PPC64_FALSE = 
HAVE_CPU_PPC64_TRUE = #
HAVE_CPU_PPC_FALSE = 
HAVE_CPU_PPC_TRUE = #
HAVE_CPU_S390_FALSE = 
HAVE_CPU_S390_TRUE = #
HAVE_CPU_SPARC_FALSE = 
HAVE_CPU_SPARC_TRUE = #
HAVE_CPU_X86_64_FALSE = 
HAVE_CPU_X86_64_TRUE = #
HAVE_CXX = yes
HAVE_DIRECTDRAW = 
HAVE_DTS = 
HAVE_FAAC = 
HAVE_FAAD = 
HAVE_GIO_FALSE = #
HAVE_GIO_TRUE = 
HAVE_GLADE = yes
HAVE_GLADE_FALSE = #
HAVE_GLADE_TRUE = 
HAVE_GSM = 
HAVE_GST_CHECK_FALSE = #
HAVE_GST_CHECK_TRUE = 
HAVE_GTK_FALSE = #
HAVE_GTK_TRUE = 
HAVE_JP2K = 
HAVE_NAS = 
HAVE_PTHREAD_H_FALSE = #
HAVE_PTHREAD_H_TRUE = 
HAVE_UNISTD_H_FALSE = #
HAVE_UNISTD_H_TRUE = 
HAVE_VALGRIND_FALSE = 
HAVE_VALGRIND_TRUE = #
HAVE_WINSOCK2_H_FALSE = 
HAVE_WINSOCK2_H_TRUE = #
HAVE_X = 
HAVE_X11 = yes
HAVE_X11_FALSE = #
HAVE_X11_TRUE = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INTLLIBS = 
IPTC_CFLAGS = 
IPTC_LIBS = 
IVORBIS_CFLAGS = 
IVORBIS_LIBS = 
JACK_CFLAGS = 
JACK_LIBS = 
JP2K_LIBS = 
LDFLAGS = -Wl,-z,defs -Wl,-O1 -Wl,--as-needed
LIBDC1394_CFLAGS = 
LIBDC1394_LIBS = 
LIBDIR = /usr/lib
LIBICONV = -liconv
LIBINTL = 
LIBM = -lm
LIBMMS_CFLAGS = 
LIBMMS_LIBS = 
LIBOBJS = 
LIBOIL_CFLAGS = -I/usr/include/liboil-0.3  
LIBOIL_LIBS = -loil-0.3 -lm -lrt  
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LOCALEDIR = /usr/share/locale
LRDF_CFLAGS = 
LRDF_LIBS = 
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEFLAGS = 
MAKEINFO = ${SHELL} /home/tom/gst-plugins-bad0.10-musepack-0.10.13-git209/missing --run makeinfo
METADATA_CFLAGS = 
METADATA_LIBS = 
MIMIC_CFLAGS = 
MIMIC_LIBS = 
MJPEG_CFLAGS = 
MJPEG_LIBS = 
MKINSTALLDIRS = $(top_builddir)/./mkinstalldirs
MODPLUG_CFLAGS = 
MODPLUG_LIBS = 
MPEG2ENC_CFLAGS = 
MPEG2ENC_LIBS = 
MPLEX_CFLAGS = 
MPLEX_LIBS = 
MSGFMT = /scratchbox/tools/bin/msgfmt
MSGMERGE = /scratchbox/tools/bin/msgmerge
MUSEPACK_LIBS = -lmpcdec
MUSICBRAINZ_CFLAGS = 
MUSICBRAINZ_LIBS = 
NAS_CFLAGS = 
NAS_LIBS = 
NEON_CFLAGS = 
NEON_LIBS = 
NMEDIT = 
OBJC = gcc
OBJCDEPMODE = depmode=none
OBJC_LDFLAGS = -lobjc
OBJDUMP = objdump
OBJEXT = o
OFA_CFLAGS = 
OFA_LIBS = 
PACKAGE = gst-plugins-bad
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=GStreamer
PACKAGE_NAME = GStreamer Bad Plug-ins
PACKAGE_STRING = GStreamer Bad Plug-ins 0.10.13.1
PACKAGE_TARNAME = gst-plugins-bad
PACKAGE_VERSION = 0.10.13.1
PACKAGE_VERSION_MAJOR = 0
PACKAGE_VERSION_MICRO = 13
PACKAGE_VERSION_MINOR = 10
PACKAGE_VERSION_NANO = 1
PACKAGE_VERSION_RELEASE = 0.20100104.174527
PATH_SEPARATOR = :
PKG_CONFIG = /scratchbox/tools/bin/pkg-config
PLUGINDIR = /usr/lib/gstreamer-0.10
POSUB = po
PROFILE_CFLAGS = -g
PYTHON = /scratchbox/tools/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.3
Q = $(V:1=)
RANLIB = ranlib
SDL_CFLAGS = 
SDL_CONFIG = 
SDL_LIBS = 
SED = /scratchbox/tools/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SLV2_CFLAGS = 
SLV2_LIBS = 
SNDFILE_CFLAGS = 
SNDFILE_LIBS = 
SOUNDTOUCH_CFLAGS = 
SOUNDTOUCH_LIBS = 
SPC_LIBS = 
STRIP = strip
SWFDEC_CFLAGS = 
SWFDEC_LIBS = 
THEORADEC_CFLAGS = 
THEORADEC_LIBS = 
TIMIDITY_CFLAGS = 
TIMIDITY_LIBS = 
USE_ACM_FALSE = 
USE_ACM_TRUE = #
USE_ALSA_FALSE = 
USE_ALSA_TRUE = #
USE_AMRWB_FALSE = 
USE_AMRWB_TRUE = #
USE_APEXSINK_FALSE = 
USE_APEXSINK_TRUE = #
USE_ASSRENDER_FALSE = 
USE_ASSRENDER_TRUE = #
USE_BZ2_FALSE = 
USE_BZ2_TRUE = #
USE_CDAUDIO_FALSE = 
USE_CDAUDIO_TRUE = #
USE_CELT_FALSE = 
USE_CELT_TRUE = #
USE_DC1394_FALSE = 
USE_DC1394_TRUE = #
USE_DIRAC_FALSE = 
USE_DIRAC_TRUE = #
USE_DIRECTDRAW_FALSE = 
USE_DIRECTDRAW_TRUE = #
USE_DIRECTFB_FALSE = 
USE_DIRECTFB_TRUE = #
USE_DIVX_FALSE = 
USE_DIVX_TRUE = #
USE_DTS_FALSE = 
USE_DTS_TRUE = #
USE_DVB_FALSE = 
USE_DVB_TRUE = #
USE_DVDNAV_FALSE = 
USE_DVDNAV_TRUE = #
USE_EXPERIMENTAL_FALSE = #
USE_EXPERIMENTAL_TRUE = 
USE_EXTERNAL_FALSE = #
USE_EXTERNAL_TRUE = 
USE_FAAC_FALSE = 
USE_FAAC_TRUE = #
USE_FAAD_FALSE = 
USE_FAAD_TRUE = #
USE_FBDEV_FALSE = 
USE_FBDEV_TRUE = #
USE_GSM_FALSE = 
USE_GSM_TRUE = #
USE_IVORBIS_FALSE = 
USE_IVORBIS_TRUE = #
USE_JACK_FALSE = 
USE_JACK_TRUE = #
USE_JP2K_FALSE = 
USE_JP2K_TRUE = #
USE_LADSPA_FALSE = 
USE_LADSPA_TRUE = #
USE_LIBMMS_FALSE = 
USE_LIBMMS_TRUE = #
USE_LV2_FALSE = 
USE_LV2_TRUE = #
USE_METADATA_FALSE = 
USE_METADATA_TRUE = #
USE_MIMIC_FALSE = 
USE_MIMIC_TRUE = #
USE_MODPLUG_FALSE = 
USE_MODPLUG_TRUE = #
USE_MPEG2ENC_FALSE = 
USE_MPEG2ENC_TRUE = #
USE_MPLEX_FALSE = 
USE_MPLEX_TRUE = #
USE_MUSEPACK_FALSE = #
USE_MUSEPACK_TRUE = 
USE_MUSICBRAINZ_FALSE = 
USE_MUSICBRAINZ_TRUE = #
USE_MYTHTV_FALSE = 
USE_MYTHTV_TRUE = #
USE_NAS_FALSE = 
USE_NAS_TRUE = #
USE_NEON_FALSE = 
USE_NEON_TRUE = #
USE_NLS = yes
USE_OFA_FALSE = 
USE_OFA_TRUE = #
USE_OSS4_FALSE = 
USE_OSS4_TRUE = #
USE_OSX_VIDEO_FALSE = 
USE_OSX_VIDEO_TRUE = #
USE_PLUGIN_AACPARSE_FALSE = 
USE_PLUGIN_AACPARSE_TRUE = #
USE_PLUGIN_ADPCMDEC_FALSE = 
USE_PLUGIN_ADPCMDEC_TRUE = #
USE_PLUGIN_AIFFPARSE_FALSE = 
USE_PLUGIN_AIFFPARSE_TRUE = #
USE_PLUGIN_AMRPARSE_FALSE = 
USE_PLUGIN_AMRPARSE_TRUE = #
USE_PLUGIN_AUTOCONVERT_FALSE = 
USE_PLUGIN_AUTOCONVERT_TRUE = #
USE_PLUGIN_BAYER_FALSE = 
USE_PLUGIN_BAYER_TRUE = #
USE_PLUGIN_CAMERABIN_FALSE = 
USE_PLUGIN_CAMERABIN_TRUE = #
USE_PLUGIN_CDXAPARSE_FALSE = 
USE_PLUGIN_CDXAPARSE_TRUE = #
USE_PLUGIN_DCCP_FALSE = 
USE_PLUGIN_DCCP_TRUE = #
USE_PLUGIN_DEBUGUTILS_FALSE = 
USE_PLUGIN_DEBUGUTILS_TRUE = #
USE_PLUGIN_DTMF_FALSE = 
USE_PLUGIN_DTMF_TRUE = #
USE_PLUGIN_DVDSPU_FALSE = 
USE_PLUGIN_DVDSPU_TRUE = #
USE_PLUGIN_FESTIVAL_FALSE = 
USE_PLUGIN_FESTIVAL_TRUE = #
USE_PLUGIN_FREEZE_FALSE = 
USE_PLUGIN_FREEZE_TRUE = #
USE_PLUGIN_FREI0R_FALSE = 
USE_PLUGIN_FREI0R_TRUE = #
USE_PLUGIN_H264PARSE_FALSE = 
USE_PLUGIN_H264PARSE_TRUE = #
USE_PLUGIN_HDVPARSE_FALSE = 
USE_PLUGIN_HDVPARSE_TRUE = #
USE_PLUGIN_ID3TAG_FALSE = 
USE_PLUGIN_ID3TAG_TRUE = #
USE_PLUGIN_LEGACYRESAMPLE_FALSE = 
USE_PLUGIN_LEGACYRESAMPLE_TRUE = #
USE_PLUGIN_LIBRFB_FALSE = 
USE_PLUGIN_LIBRFB_TRUE = #
USE_PLUGIN_LIVEADDER_FALSE = 
USE_PLUGIN_LIVEADDER_TRUE = #
USE_PLUGIN_MPEG4VIDEOPARSE_FALSE = 
USE_PLUGIN_MPEG4VIDEOPARSE_TRUE = #
USE_PLUGIN_MPEGDEMUX_FALSE = 
USE_PLUGIN_MPEGDEMUX_TRUE = #
USE_PLUGIN_MPEGTSMUX_FALSE = 
USE_PLUGIN_MPEGTSMUX_TRUE = #
USE_PLUGIN_MPEGVIDEOPARSE_FALSE = 
USE_PLUGIN_MPEGVIDEOPARSE_TRUE = #
USE_PLUGIN_MVE_FALSE = 
USE_PLUGIN_MVE_TRUE = #
USE_PLUGIN_MXF_FALSE = 
USE_PLUGIN_MXF_TRUE = #
USE_PLUGIN_NSF_FALSE = 
USE_PLUGIN_NSF_TRUE = #
USE_PLUGIN_NUVDEMUX_FALSE = 
USE_PLUGIN_NUVDEMUX_TRUE = #
USE_PLUGIN_PCAPPARSE_FALSE = 
USE_PLUGIN_PCAPPARSE_TRUE = #
USE_PLUGIN_QTMUX_FALSE = 
USE_PLUGIN_QTMUX_TRUE = #
USE_PLUGIN_RAWPARSE_FALSE = 
USE_PLUGIN_RAWPARSE_TRUE = #
USE_PLUGIN_REAL_FALSE = 
USE_PLUGIN_REAL_TRUE = #
USE_PLUGIN_RTPMANAGER_FALSE = 
USE_PLUGIN_RTPMANAGER_TRUE = #
USE_PLUGIN_RTPMUX_FALSE = 
USE_PLUGIN_RTPMUX_TRUE = #
USE_PLUGIN_SCALETEMPO_FALSE = 
USE_PLUGIN_SCALETEMPO_TRUE = #
USE_PLUGIN_SDP_FALSE = 
USE_PLUGIN_SDP_TRUE = #
USE_PLUGIN_SELECTOR_FALSE = 
USE_PLUGIN_SELECTOR_TRUE = #
USE_PLUGIN_SHAPEWIPE_FALSE = 
USE_PLUGIN_SHAPEWIPE_TRUE = #
USE_PLUGIN_SIREN_FALSE = 
USE_PLUGIN_SIREN_TRUE = #
USE_PLUGIN_SPEED_FALSE = 
USE_PLUGIN_SPEED_TRUE = #
USE_PLUGIN_STEREO_FALSE = 
USE_PLUGIN_STEREO_TRUE = #
USE_PLUGIN_SUBENC_FALSE = 
USE_PLUGIN_SUBENC_TRUE = #
USE_PLUGIN_TTA_FALSE = 
USE_PLUGIN_TTA_TRUE = #
USE_PLUGIN_VALVE_FALSE = 
USE_PLUGIN_VALVE_TRUE = #
USE_PLUGIN_VIDEOSIGNAL_FALSE = 
USE_PLUGIN_VIDEOSIGNAL_TRUE = #
USE_PLUGIN_VMNC_FALSE = 
USE_PLUGIN_VMNC_TRUE = #
USE_PLUGIN_XDGMIME_FALSE = 
USE_PLUGIN_XDGMIME_TRUE = #
USE_QUICKTIME_FALSE = 
USE_QUICKTIME_TRUE = #
USE_SDL_FALSE = 
USE_SDL_TRUE = #
USE_SNDFILE_FALSE = 
USE_SNDFILE_TRUE = #
USE_SOUNDTOUCH_FALSE = 
USE_SOUNDTOUCH_TRUE = #
USE_SPC_FALSE = 
USE_SPC_TRUE = #
USE_SWFDEC_FALSE = 
USE_SWFDEC_TRUE = #
USE_THEORADEC_FALSE = 
USE_THEORADEC_TRUE = #
USE_TIMIDITY_FALSE = 
USE_TIMIDITY_TRUE = #
USE_VCD_FALSE = 
USE_VCD_TRUE = #
USE_VDPAU_FALSE = 
USE_VDPAU_TRUE = #
USE_WILDMIDI_FALSE = 
USE_WILDMIDI_TRUE = #
USE_WININET_FALSE = 
USE_WININET_TRUE = #
USE_XVID_FALSE = 
USE_XVID_TRUE = #
V = 1
VALGRIND_CFLAGS = 
VALGRIND_LIBS = 
VALGRIND_PATH = no
VDPAU_CFLAGS = 
VDPAU_LIBS = 
VERSION = 0.10.13.1
WILDMIDI_CFLAGS = 
WILDMIDI_LIBS = 
WIN32_LIBS = 
X11_CFLAGS =  
X11_LIBS = -lX11  
XDG_LIBS = 
XGETTEXT = /scratchbox/tools/bin/xgettext
XMKMF = 
XMP_1_99_5_CFLAGS = 
XMP_1_99_5_LIBS = 
XMP_CFLAGS = 
XMP_LIBS = 
XVID_LIBS = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ac_ct_CC = cc
ac_ct_CXX = 
ac_ct_F77 = 
ac_ct_OBJC = gcc
am__fastdepCC_FALSE = 
am__fastdepCC_TRUE = #
am__fastdepCXX_FALSE = 
am__fastdepCXX_TRUE = #
am__fastdepOBJC_FALSE = 
am__fastdepOBJC_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = arm-unknown-linux-gnueabi
build_alias = arm-linux-gnueabi
build_cpu = arm
build_os = linux-gnueabi
build_vendor = unknown
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-unknown-linux-gnueabi
host_alias = 
host_cpu = arm
host_os = linux-gnueabi
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = /home/tom/gst-plugins-bad0.10-musepack-0.10.13-git209/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${prefix}/lib/gst-plugins-bad0.10-musepack
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = ${prefix}/share/man
mkdir_p = mkdir -p -- .
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/gst-plugins-bad
pkgpythondir = ${pythondir}/gst-plugins-bad
plugindir = $(libdir)/gstreamer-0.10
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.3/site-packages
pythondir = ${prefix}/lib/python2.3/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
shavedir = 
sysconfdir = /etc
target_alias = 
LOOPS = 10

# inspect every plugin feature
GST_INSPECT = $(GST_TOOLS_DIR)/gst-inspect-$(GST_MAJORMINOR)
CHECK_REGISTRY = $(top_builddir)/tests/check/test-registry.reg
REGISTRY_ENVIRONMENT = \
	GST_REGISTRY=$(CHECK_REGISTRY)


# FIXME: the PLUGIN_PATH has a hack to reach good for now
# decide if it's worth it to add a .pc file for this, plus a dependancy on it
TESTS_ENVIRONMENT = \
        $(REGISTRY_ENVIRONMENT)                                 \
        GST_PLUGIN_SYSTEM_PATH=					\
        GST_PLUGIN_PATH=$(top_builddir)/gst:$(top_builddir)/sys:$(top_builddir)/ext:$(top_builddir)/../gst-ffmpeg/ext/ffmpeg:$(top_builddir)/../gst-plugins-good/gst:$(top_builddir)/../gst-plugins-good/sys:$(top_builddir)/../gst-plugins-good/ext:$(top_builddir)/../gst-plugins-ugly/gst:$(top_builddir)/../gst-plugins-ugly/sys:$(top_builddir)/../gst-plugins-ugly/ext:$(GSTPB_PLUGINS_DIR):$(GST_PLUGINS_DIR) \
        STATE_IGNORE_ELEMENTS="alsaspdifsink apexsink camerabin cdaudio dc1394src dccpclientsrc dccpclientsink dccpserversrc dccpserversink dvbsrc dvbbasebin dfbvideosink festival nassink rsndvdbin sdlaudiosink sdlvideosink vcdsrc rfbsrc"


# the core dumps of some machines have PIDs appended
CLEANFILES = core.* test-registry.*
SUPPRESSIONS = $(top_srcdir)/common/gst.supp $(srcdir)/gst-plugins-bad.supp
check_metadata = 
#check_metadata = pipelines/metadata
check_mpeg2enc = 
#check_mpeg2enc = elements/mpeg2enc
check_mplex = 
#check_mplex = elements/mplex
check_neon = 
#check_neon = elements/neonhttpsrc
check_ofa = 
#check_ofa = elements/ofa
check_timidity = 
#check_timidity = elements/timidity
VALGRIND_TO_FIX = \
	elements/mpeg2enc \
	elements/mplex


# valgrind testing
VALGRIND_TESTS_DISABLE = \
	$(VALGRIND_TO_FIX)

noinst_HEADERS = elements/mxfdemux.h elements/amrparse_data.h elements/aacparse_data.h
TESTS = $(check_PROGRAMS)
AM_CFLAGS = $(GST_OBJ_CFLAGS) $(GST_CHECK_CFLAGS) $(CHECK_CFLAGS) $(GST_OPTION_CFLAGS)
LDADD = $(GST_OBJ_LIBS) $(GST_CHECK_LIBS) $(CHECK_LIBS)
elements_camerabin_CFLAGS = \
        -I$(top_builddir)/gst-libs \
        $(GST_CFLAGS) $(GST_BASE_CFLAGS) $(GST_CHECK_CFLAGS) \
        -DGST_USE_UNSTABLE_API

elements_camerabin_LDADD = \
        $(top_builddir)/gst-libs/gst/interfaces/libgstphotography-0.10.la \
        $(GST_LIBS) $(GST_BASE_LIBS) $(GST_CHECK_LIBS) \
         -lgstinterfaces-0.10

elements_camerabin_SOURCES = elements/camerabin.c
elements_rtpbin_buffer_list_CFLAGS = $(GST_PLUGINS_BASE_CFLAGS) $(GST_CFLAGS) \
	$(ERROR_CFLAGS) $(GST_CHECK_CFLAGS)

elements_rtpbin_buffer_list_LDADD = $(GST_PLUGINS_BASE_LIBS) \
             -lgstnetbuffer-0.10 -lgstrtp-0.10 \
             $(GST_BASE_LIBS) $(GST_LIBS_LIBS) $(GST_CHECK_LIBS)

elements_rtpbin_buffer_list_SOURCES = elements/rtpbin_buffer_list.c
elements_timidity_CFLAGS = $(GST_BASE_CFLAGS) $(AM_CFLAGS)
elements_timidity_LDADD = $(GST_BASE_LIBS) $(LDADD)
EXTRA_DIST = gst-plugins-bad.supp
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/common/check.mak $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tests/check/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  tests/check/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
elements/$(am__dirstamp):
	@$(mkdir_p) elements
	@: > elements/$(am__dirstamp)
elements/aacparse$(EXEEXT): $(elements_aacparse_OBJECTS) $(elements_aacparse_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/aacparse$(EXEEXT)
	$(LINK) $(elements_aacparse_LDFLAGS) $(elements_aacparse_OBJECTS) $(elements_aacparse_LDADD) $(LIBS)
elements/amrparse$(EXEEXT): $(elements_amrparse_OBJECTS) $(elements_amrparse_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/amrparse$(EXEEXT)
	$(LINK) $(elements_amrparse_LDFLAGS) $(elements_amrparse_OBJECTS) $(elements_amrparse_LDADD) $(LIBS)
elements/camerabin$(EXEEXT): $(elements_camerabin_OBJECTS) $(elements_camerabin_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/camerabin$(EXEEXT)
	$(LINK) $(elements_camerabin_LDFLAGS) $(elements_camerabin_OBJECTS) $(elements_camerabin_LDADD) $(LIBS)
elements/legacyresample$(EXEEXT): $(elements_legacyresample_OBJECTS) $(elements_legacyresample_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/legacyresample$(EXEEXT)
	$(LINK) $(elements_legacyresample_LDFLAGS) $(elements_legacyresample_OBJECTS) $(elements_legacyresample_LDADD) $(LIBS)
elements/mpeg2enc$(EXEEXT): $(elements_mpeg2enc_OBJECTS) $(elements_mpeg2enc_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/mpeg2enc$(EXEEXT)
	$(LINK) $(elements_mpeg2enc_LDFLAGS) $(elements_mpeg2enc_OBJECTS) $(elements_mpeg2enc_LDADD) $(LIBS)
elements/mplex$(EXEEXT): $(elements_mplex_OBJECTS) $(elements_mplex_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/mplex$(EXEEXT)
	$(LINK) $(elements_mplex_LDFLAGS) $(elements_mplex_OBJECTS) $(elements_mplex_LDADD) $(LIBS)
elements/mxfdemux$(EXEEXT): $(elements_mxfdemux_OBJECTS) $(elements_mxfdemux_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/mxfdemux$(EXEEXT)
	$(LINK) $(elements_mxfdemux_LDFLAGS) $(elements_mxfdemux_OBJECTS) $(elements_mxfdemux_LDADD) $(LIBS)
elements/mxfmux$(EXEEXT): $(elements_mxfmux_OBJECTS) $(elements_mxfmux_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/mxfmux$(EXEEXT)
	$(LINK) $(elements_mxfmux_LDFLAGS) $(elements_mxfmux_OBJECTS) $(elements_mxfmux_LDADD) $(LIBS)
elements/neonhttpsrc$(EXEEXT): $(elements_neonhttpsrc_OBJECTS) $(elements_neonhttpsrc_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/neonhttpsrc$(EXEEXT)
	$(LINK) $(elements_neonhttpsrc_LDFLAGS) $(elements_neonhttpsrc_OBJECTS) $(elements_neonhttpsrc_LDADD) $(LIBS)
elements/ofa$(EXEEXT): $(elements_ofa_OBJECTS) $(elements_ofa_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/ofa$(EXEEXT)
	$(LINK) $(elements_ofa_LDFLAGS) $(elements_ofa_OBJECTS) $(elements_ofa_LDADD) $(LIBS)
elements/qtmux$(EXEEXT): $(elements_qtmux_OBJECTS) $(elements_qtmux_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/qtmux$(EXEEXT)
	$(LINK) $(elements_qtmux_LDFLAGS) $(elements_qtmux_OBJECTS) $(elements_qtmux_LDADD) $(LIBS)
elements/rtpbin$(EXEEXT): $(elements_rtpbin_OBJECTS) $(elements_rtpbin_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/rtpbin$(EXEEXT)
	$(LINK) $(elements_rtpbin_LDFLAGS) $(elements_rtpbin_OBJECTS) $(elements_rtpbin_LDADD) $(LIBS)
elements/rtpbin_buffer_list$(EXEEXT): $(elements_rtpbin_buffer_list_OBJECTS) $(elements_rtpbin_buffer_list_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/rtpbin_buffer_list$(EXEEXT)
	$(LINK) $(elements_rtpbin_buffer_list_LDFLAGS) $(elements_rtpbin_buffer_list_OBJECTS) $(elements_rtpbin_buffer_list_LDADD) $(LIBS)
elements/selector$(EXEEXT): $(elements_selector_OBJECTS) $(elements_selector_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/selector$(EXEEXT)
	$(LINK) $(elements_selector_LDFLAGS) $(elements_selector_OBJECTS) $(elements_selector_LDADD) $(LIBS)
elements/shapewipe$(EXEEXT): $(elements_shapewipe_OBJECTS) $(elements_shapewipe_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/shapewipe$(EXEEXT)
	$(LINK) $(elements_shapewipe_LDFLAGS) $(elements_shapewipe_OBJECTS) $(elements_shapewipe_LDADD) $(LIBS)
elements/timidity$(EXEEXT): $(elements_timidity_OBJECTS) $(elements_timidity_DEPENDENCIES) elements/$(am__dirstamp)
	@rm -f elements/timidity$(EXEEXT)
	$(LINK) $(elements_timidity_LDFLAGS) $(elements_timidity_OBJECTS) $(elements_timidity_LDADD) $(LIBS)
generic/$(am__dirstamp):
	@$(mkdir_p) generic
	@: > generic/$(am__dirstamp)
generic/states$(EXEEXT): $(generic_states_OBJECTS) $(generic_states_DEPENDENCIES) generic/$(am__dirstamp)
	@rm -f generic/states$(EXEEXT)
	$(LINK) $(generic_states_LDFLAGS) $(generic_states_OBJECTS) $(generic_states_LDADD) $(LIBS)
pipelines/$(am__dirstamp):
	@$(mkdir_p) pipelines
	@: > pipelines/$(am__dirstamp)
pipelines/metadata$(EXEEXT): $(pipelines_metadata_OBJECTS) $(pipelines_metadata_DEPENDENCIES) pipelines/$(am__dirstamp)
	@rm -f pipelines/metadata$(EXEEXT)
	$(LINK) $(pipelines_metadata_LDFLAGS) $(pipelines_metadata_OBJECTS) $(pipelines_metadata_LDADD) $(LIBS)
pipelines/mxf$(EXEEXT): $(pipelines_mxf_OBJECTS) $(pipelines_mxf_DEPENDENCIES) pipelines/$(am__dirstamp)
	@rm -f pipelines/mxf$(EXEEXT)
	$(LINK) $(pipelines_mxf_LDFLAGS) $(pipelines_mxf_OBJECTS) $(pipelines_mxf_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/aacparse.Po
#include ./$(DEPDIR)/amrparse.Po
#include ./$(DEPDIR)/elements_camerabin-camerabin.Po
#include ./$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Po
#include ./$(DEPDIR)/elements_timidity-timidity.Po
#include ./$(DEPDIR)/legacyresample.Po
#include ./$(DEPDIR)/metadata.Po
#include ./$(DEPDIR)/mpeg2enc.Po
#include ./$(DEPDIR)/mplex.Po
#include ./$(DEPDIR)/mxf.Po
#include ./$(DEPDIR)/mxfdemux.Po
#include ./$(DEPDIR)/mxfmux.Po
#include ./$(DEPDIR)/neonhttpsrc.Po
#include ./$(DEPDIR)/ofa.Po
#include ./$(DEPDIR)/qtmux.Po
#include ./$(DEPDIR)/rtpbin.Po
#include ./$(DEPDIR)/selector.Po
#include ./$(DEPDIR)/shapewipe.Po
#include ./$(DEPDIR)/states.Po

.c.o:
#	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no 
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c $<

.c.obj:
#	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no 
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
#	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes 
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LTCOMPILE) -c -o $@ $<

aacparse.o: elements/aacparse.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aacparse.o -MD -MP -MF "$(DEPDIR)/aacparse.Tpo" -c -o aacparse.o `test -f 'elements/aacparse.c' || echo '$(srcdir)/'`elements/aacparse.c; \
#	then mv -f "$(DEPDIR)/aacparse.Tpo" "$(DEPDIR)/aacparse.Po"; else rm -f "$(DEPDIR)/aacparse.Tpo"; exit 1; fi
#	source='elements/aacparse.c' object='aacparse.o' libtool=no 
#	depfile='$(DEPDIR)/aacparse.Po' tmpdepfile='$(DEPDIR)/aacparse.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aacparse.o `test -f 'elements/aacparse.c' || echo '$(srcdir)/'`elements/aacparse.c

aacparse.obj: elements/aacparse.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aacparse.obj -MD -MP -MF "$(DEPDIR)/aacparse.Tpo" -c -o aacparse.obj `if test -f 'elements/aacparse.c'; then $(CYGPATH_W) 'elements/aacparse.c'; else $(CYGPATH_W) '$(srcdir)/elements/aacparse.c'; fi`; \
#	then mv -f "$(DEPDIR)/aacparse.Tpo" "$(DEPDIR)/aacparse.Po"; else rm -f "$(DEPDIR)/aacparse.Tpo"; exit 1; fi
#	source='elements/aacparse.c' object='aacparse.obj' libtool=no 
#	depfile='$(DEPDIR)/aacparse.Po' tmpdepfile='$(DEPDIR)/aacparse.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aacparse.obj `if test -f 'elements/aacparse.c'; then $(CYGPATH_W) 'elements/aacparse.c'; else $(CYGPATH_W) '$(srcdir)/elements/aacparse.c'; fi`

aacparse.lo: elements/aacparse.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT aacparse.lo -MD -MP -MF "$(DEPDIR)/aacparse.Tpo" -c -o aacparse.lo `test -f 'elements/aacparse.c' || echo '$(srcdir)/'`elements/aacparse.c; \
#	then mv -f "$(DEPDIR)/aacparse.Tpo" "$(DEPDIR)/aacparse.Plo"; else rm -f "$(DEPDIR)/aacparse.Tpo"; exit 1; fi
#	source='elements/aacparse.c' object='aacparse.lo' libtool=yes 
#	depfile='$(DEPDIR)/aacparse.Plo' tmpdepfile='$(DEPDIR)/aacparse.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o aacparse.lo `test -f 'elements/aacparse.c' || echo '$(srcdir)/'`elements/aacparse.c

amrparse.o: elements/amrparse.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amrparse.o -MD -MP -MF "$(DEPDIR)/amrparse.Tpo" -c -o amrparse.o `test -f 'elements/amrparse.c' || echo '$(srcdir)/'`elements/amrparse.c; \
#	then mv -f "$(DEPDIR)/amrparse.Tpo" "$(DEPDIR)/amrparse.Po"; else rm -f "$(DEPDIR)/amrparse.Tpo"; exit 1; fi
#	source='elements/amrparse.c' object='amrparse.o' libtool=no 
#	depfile='$(DEPDIR)/amrparse.Po' tmpdepfile='$(DEPDIR)/amrparse.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amrparse.o `test -f 'elements/amrparse.c' || echo '$(srcdir)/'`elements/amrparse.c

amrparse.obj: elements/amrparse.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amrparse.obj -MD -MP -MF "$(DEPDIR)/amrparse.Tpo" -c -o amrparse.obj `if test -f 'elements/amrparse.c'; then $(CYGPATH_W) 'elements/amrparse.c'; else $(CYGPATH_W) '$(srcdir)/elements/amrparse.c'; fi`; \
#	then mv -f "$(DEPDIR)/amrparse.Tpo" "$(DEPDIR)/amrparse.Po"; else rm -f "$(DEPDIR)/amrparse.Tpo"; exit 1; fi
#	source='elements/amrparse.c' object='amrparse.obj' libtool=no 
#	depfile='$(DEPDIR)/amrparse.Po' tmpdepfile='$(DEPDIR)/amrparse.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amrparse.obj `if test -f 'elements/amrparse.c'; then $(CYGPATH_W) 'elements/amrparse.c'; else $(CYGPATH_W) '$(srcdir)/elements/amrparse.c'; fi`

amrparse.lo: elements/amrparse.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amrparse.lo -MD -MP -MF "$(DEPDIR)/amrparse.Tpo" -c -o amrparse.lo `test -f 'elements/amrparse.c' || echo '$(srcdir)/'`elements/amrparse.c; \
#	then mv -f "$(DEPDIR)/amrparse.Tpo" "$(DEPDIR)/amrparse.Plo"; else rm -f "$(DEPDIR)/amrparse.Tpo"; exit 1; fi
#	source='elements/amrparse.c' object='amrparse.lo' libtool=yes 
#	depfile='$(DEPDIR)/amrparse.Plo' tmpdepfile='$(DEPDIR)/amrparse.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amrparse.lo `test -f 'elements/amrparse.c' || echo '$(srcdir)/'`elements/amrparse.c

elements_camerabin-camerabin.o: elements/camerabin.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_camerabin_CFLAGS) $(CFLAGS) -MT elements_camerabin-camerabin.o -MD -MP -MF "$(DEPDIR)/elements_camerabin-camerabin.Tpo" -c -o elements_camerabin-camerabin.o `test -f 'elements/camerabin.c' || echo '$(srcdir)/'`elements/camerabin.c; \
#	then mv -f "$(DEPDIR)/elements_camerabin-camerabin.Tpo" "$(DEPDIR)/elements_camerabin-camerabin.Po"; else rm -f "$(DEPDIR)/elements_camerabin-camerabin.Tpo"; exit 1; fi
#	source='elements/camerabin.c' object='elements_camerabin-camerabin.o' libtool=no 
#	depfile='$(DEPDIR)/elements_camerabin-camerabin.Po' tmpdepfile='$(DEPDIR)/elements_camerabin-camerabin.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_camerabin_CFLAGS) $(CFLAGS) -c -o elements_camerabin-camerabin.o `test -f 'elements/camerabin.c' || echo '$(srcdir)/'`elements/camerabin.c

elements_camerabin-camerabin.obj: elements/camerabin.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_camerabin_CFLAGS) $(CFLAGS) -MT elements_camerabin-camerabin.obj -MD -MP -MF "$(DEPDIR)/elements_camerabin-camerabin.Tpo" -c -o elements_camerabin-camerabin.obj `if test -f 'elements/camerabin.c'; then $(CYGPATH_W) 'elements/camerabin.c'; else $(CYGPATH_W) '$(srcdir)/elements/camerabin.c'; fi`; \
#	then mv -f "$(DEPDIR)/elements_camerabin-camerabin.Tpo" "$(DEPDIR)/elements_camerabin-camerabin.Po"; else rm -f "$(DEPDIR)/elements_camerabin-camerabin.Tpo"; exit 1; fi
#	source='elements/camerabin.c' object='elements_camerabin-camerabin.obj' libtool=no 
#	depfile='$(DEPDIR)/elements_camerabin-camerabin.Po' tmpdepfile='$(DEPDIR)/elements_camerabin-camerabin.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_camerabin_CFLAGS) $(CFLAGS) -c -o elements_camerabin-camerabin.obj `if test -f 'elements/camerabin.c'; then $(CYGPATH_W) 'elements/camerabin.c'; else $(CYGPATH_W) '$(srcdir)/elements/camerabin.c'; fi`

elements_camerabin-camerabin.lo: elements/camerabin.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_camerabin_CFLAGS) $(CFLAGS) -MT elements_camerabin-camerabin.lo -MD -MP -MF "$(DEPDIR)/elements_camerabin-camerabin.Tpo" -c -o elements_camerabin-camerabin.lo `test -f 'elements/camerabin.c' || echo '$(srcdir)/'`elements/camerabin.c; \
#	then mv -f "$(DEPDIR)/elements_camerabin-camerabin.Tpo" "$(DEPDIR)/elements_camerabin-camerabin.Plo"; else rm -f "$(DEPDIR)/elements_camerabin-camerabin.Tpo"; exit 1; fi
#	source='elements/camerabin.c' object='elements_camerabin-camerabin.lo' libtool=yes 
#	depfile='$(DEPDIR)/elements_camerabin-camerabin.Plo' tmpdepfile='$(DEPDIR)/elements_camerabin-camerabin.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_camerabin_CFLAGS) $(CFLAGS) -c -o elements_camerabin-camerabin.lo `test -f 'elements/camerabin.c' || echo '$(srcdir)/'`elements/camerabin.c

legacyresample.o: elements/legacyresample.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT legacyresample.o -MD -MP -MF "$(DEPDIR)/legacyresample.Tpo" -c -o legacyresample.o `test -f 'elements/legacyresample.c' || echo '$(srcdir)/'`elements/legacyresample.c; \
#	then mv -f "$(DEPDIR)/legacyresample.Tpo" "$(DEPDIR)/legacyresample.Po"; else rm -f "$(DEPDIR)/legacyresample.Tpo"; exit 1; fi
#	source='elements/legacyresample.c' object='legacyresample.o' libtool=no 
#	depfile='$(DEPDIR)/legacyresample.Po' tmpdepfile='$(DEPDIR)/legacyresample.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o legacyresample.o `test -f 'elements/legacyresample.c' || echo '$(srcdir)/'`elements/legacyresample.c

legacyresample.obj: elements/legacyresample.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT legacyresample.obj -MD -MP -MF "$(DEPDIR)/legacyresample.Tpo" -c -o legacyresample.obj `if test -f 'elements/legacyresample.c'; then $(CYGPATH_W) 'elements/legacyresample.c'; else $(CYGPATH_W) '$(srcdir)/elements/legacyresample.c'; fi`; \
#	then mv -f "$(DEPDIR)/legacyresample.Tpo" "$(DEPDIR)/legacyresample.Po"; else rm -f "$(DEPDIR)/legacyresample.Tpo"; exit 1; fi
#	source='elements/legacyresample.c' object='legacyresample.obj' libtool=no 
#	depfile='$(DEPDIR)/legacyresample.Po' tmpdepfile='$(DEPDIR)/legacyresample.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o legacyresample.obj `if test -f 'elements/legacyresample.c'; then $(CYGPATH_W) 'elements/legacyresample.c'; else $(CYGPATH_W) '$(srcdir)/elements/legacyresample.c'; fi`

legacyresample.lo: elements/legacyresample.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT legacyresample.lo -MD -MP -MF "$(DEPDIR)/legacyresample.Tpo" -c -o legacyresample.lo `test -f 'elements/legacyresample.c' || echo '$(srcdir)/'`elements/legacyresample.c; \
#	then mv -f "$(DEPDIR)/legacyresample.Tpo" "$(DEPDIR)/legacyresample.Plo"; else rm -f "$(DEPDIR)/legacyresample.Tpo"; exit 1; fi
#	source='elements/legacyresample.c' object='legacyresample.lo' libtool=yes 
#	depfile='$(DEPDIR)/legacyresample.Plo' tmpdepfile='$(DEPDIR)/legacyresample.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o legacyresample.lo `test -f 'elements/legacyresample.c' || echo '$(srcdir)/'`elements/legacyresample.c

mpeg2enc.o: elements/mpeg2enc.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mpeg2enc.o -MD -MP -MF "$(DEPDIR)/mpeg2enc.Tpo" -c -o mpeg2enc.o `test -f 'elements/mpeg2enc.c' || echo '$(srcdir)/'`elements/mpeg2enc.c; \
#	then mv -f "$(DEPDIR)/mpeg2enc.Tpo" "$(DEPDIR)/mpeg2enc.Po"; else rm -f "$(DEPDIR)/mpeg2enc.Tpo"; exit 1; fi
#	source='elements/mpeg2enc.c' object='mpeg2enc.o' libtool=no 
#	depfile='$(DEPDIR)/mpeg2enc.Po' tmpdepfile='$(DEPDIR)/mpeg2enc.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mpeg2enc.o `test -f 'elements/mpeg2enc.c' || echo '$(srcdir)/'`elements/mpeg2enc.c

mpeg2enc.obj: elements/mpeg2enc.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mpeg2enc.obj -MD -MP -MF "$(DEPDIR)/mpeg2enc.Tpo" -c -o mpeg2enc.obj `if test -f 'elements/mpeg2enc.c'; then $(CYGPATH_W) 'elements/mpeg2enc.c'; else $(CYGPATH_W) '$(srcdir)/elements/mpeg2enc.c'; fi`; \
#	then mv -f "$(DEPDIR)/mpeg2enc.Tpo" "$(DEPDIR)/mpeg2enc.Po"; else rm -f "$(DEPDIR)/mpeg2enc.Tpo"; exit 1; fi
#	source='elements/mpeg2enc.c' object='mpeg2enc.obj' libtool=no 
#	depfile='$(DEPDIR)/mpeg2enc.Po' tmpdepfile='$(DEPDIR)/mpeg2enc.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mpeg2enc.obj `if test -f 'elements/mpeg2enc.c'; then $(CYGPATH_W) 'elements/mpeg2enc.c'; else $(CYGPATH_W) '$(srcdir)/elements/mpeg2enc.c'; fi`

mpeg2enc.lo: elements/mpeg2enc.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mpeg2enc.lo -MD -MP -MF "$(DEPDIR)/mpeg2enc.Tpo" -c -o mpeg2enc.lo `test -f 'elements/mpeg2enc.c' || echo '$(srcdir)/'`elements/mpeg2enc.c; \
#	then mv -f "$(DEPDIR)/mpeg2enc.Tpo" "$(DEPDIR)/mpeg2enc.Plo"; else rm -f "$(DEPDIR)/mpeg2enc.Tpo"; exit 1; fi
#	source='elements/mpeg2enc.c' object='mpeg2enc.lo' libtool=yes 
#	depfile='$(DEPDIR)/mpeg2enc.Plo' tmpdepfile='$(DEPDIR)/mpeg2enc.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mpeg2enc.lo `test -f 'elements/mpeg2enc.c' || echo '$(srcdir)/'`elements/mpeg2enc.c

mplex.o: elements/mplex.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mplex.o -MD -MP -MF "$(DEPDIR)/mplex.Tpo" -c -o mplex.o `test -f 'elements/mplex.c' || echo '$(srcdir)/'`elements/mplex.c; \
#	then mv -f "$(DEPDIR)/mplex.Tpo" "$(DEPDIR)/mplex.Po"; else rm -f "$(DEPDIR)/mplex.Tpo"; exit 1; fi
#	source='elements/mplex.c' object='mplex.o' libtool=no 
#	depfile='$(DEPDIR)/mplex.Po' tmpdepfile='$(DEPDIR)/mplex.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mplex.o `test -f 'elements/mplex.c' || echo '$(srcdir)/'`elements/mplex.c

mplex.obj: elements/mplex.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mplex.obj -MD -MP -MF "$(DEPDIR)/mplex.Tpo" -c -o mplex.obj `if test -f 'elements/mplex.c'; then $(CYGPATH_W) 'elements/mplex.c'; else $(CYGPATH_W) '$(srcdir)/elements/mplex.c'; fi`; \
#	then mv -f "$(DEPDIR)/mplex.Tpo" "$(DEPDIR)/mplex.Po"; else rm -f "$(DEPDIR)/mplex.Tpo"; exit 1; fi
#	source='elements/mplex.c' object='mplex.obj' libtool=no 
#	depfile='$(DEPDIR)/mplex.Po' tmpdepfile='$(DEPDIR)/mplex.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mplex.obj `if test -f 'elements/mplex.c'; then $(CYGPATH_W) 'elements/mplex.c'; else $(CYGPATH_W) '$(srcdir)/elements/mplex.c'; fi`

mplex.lo: elements/mplex.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mplex.lo -MD -MP -MF "$(DEPDIR)/mplex.Tpo" -c -o mplex.lo `test -f 'elements/mplex.c' || echo '$(srcdir)/'`elements/mplex.c; \
#	then mv -f "$(DEPDIR)/mplex.Tpo" "$(DEPDIR)/mplex.Plo"; else rm -f "$(DEPDIR)/mplex.Tpo"; exit 1; fi
#	source='elements/mplex.c' object='mplex.lo' libtool=yes 
#	depfile='$(DEPDIR)/mplex.Plo' tmpdepfile='$(DEPDIR)/mplex.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mplex.lo `test -f 'elements/mplex.c' || echo '$(srcdir)/'`elements/mplex.c

mxfdemux.o: elements/mxfdemux.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mxfdemux.o -MD -MP -MF "$(DEPDIR)/mxfdemux.Tpo" -c -o mxfdemux.o `test -f 'elements/mxfdemux.c' || echo '$(srcdir)/'`elements/mxfdemux.c; \
#	then mv -f "$(DEPDIR)/mxfdemux.Tpo" "$(DEPDIR)/mxfdemux.Po"; else rm -f "$(DEPDIR)/mxfdemux.Tpo"; exit 1; fi
#	source='elements/mxfdemux.c' object='mxfdemux.o' libtool=no 
#	depfile='$(DEPDIR)/mxfdemux.Po' tmpdepfile='$(DEPDIR)/mxfdemux.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mxfdemux.o `test -f 'elements/mxfdemux.c' || echo '$(srcdir)/'`elements/mxfdemux.c

mxfdemux.obj: elements/mxfdemux.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mxfdemux.obj -MD -MP -MF "$(DEPDIR)/mxfdemux.Tpo" -c -o mxfdemux.obj `if test -f 'elements/mxfdemux.c'; then $(CYGPATH_W) 'elements/mxfdemux.c'; else $(CYGPATH_W) '$(srcdir)/elements/mxfdemux.c'; fi`; \
#	then mv -f "$(DEPDIR)/mxfdemux.Tpo" "$(DEPDIR)/mxfdemux.Po"; else rm -f "$(DEPDIR)/mxfdemux.Tpo"; exit 1; fi
#	source='elements/mxfdemux.c' object='mxfdemux.obj' libtool=no 
#	depfile='$(DEPDIR)/mxfdemux.Po' tmpdepfile='$(DEPDIR)/mxfdemux.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mxfdemux.obj `if test -f 'elements/mxfdemux.c'; then $(CYGPATH_W) 'elements/mxfdemux.c'; else $(CYGPATH_W) '$(srcdir)/elements/mxfdemux.c'; fi`

mxfdemux.lo: elements/mxfdemux.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mxfdemux.lo -MD -MP -MF "$(DEPDIR)/mxfdemux.Tpo" -c -o mxfdemux.lo `test -f 'elements/mxfdemux.c' || echo '$(srcdir)/'`elements/mxfdemux.c; \
#	then mv -f "$(DEPDIR)/mxfdemux.Tpo" "$(DEPDIR)/mxfdemux.Plo"; else rm -f "$(DEPDIR)/mxfdemux.Tpo"; exit 1; fi
#	source='elements/mxfdemux.c' object='mxfdemux.lo' libtool=yes 
#	depfile='$(DEPDIR)/mxfdemux.Plo' tmpdepfile='$(DEPDIR)/mxfdemux.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mxfdemux.lo `test -f 'elements/mxfdemux.c' || echo '$(srcdir)/'`elements/mxfdemux.c

mxfmux.o: elements/mxfmux.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mxfmux.o -MD -MP -MF "$(DEPDIR)/mxfmux.Tpo" -c -o mxfmux.o `test -f 'elements/mxfmux.c' || echo '$(srcdir)/'`elements/mxfmux.c; \
#	then mv -f "$(DEPDIR)/mxfmux.Tpo" "$(DEPDIR)/mxfmux.Po"; else rm -f "$(DEPDIR)/mxfmux.Tpo"; exit 1; fi
#	source='elements/mxfmux.c' object='mxfmux.o' libtool=no 
#	depfile='$(DEPDIR)/mxfmux.Po' tmpdepfile='$(DEPDIR)/mxfmux.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mxfmux.o `test -f 'elements/mxfmux.c' || echo '$(srcdir)/'`elements/mxfmux.c

mxfmux.obj: elements/mxfmux.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mxfmux.obj -MD -MP -MF "$(DEPDIR)/mxfmux.Tpo" -c -o mxfmux.obj `if test -f 'elements/mxfmux.c'; then $(CYGPATH_W) 'elements/mxfmux.c'; else $(CYGPATH_W) '$(srcdir)/elements/mxfmux.c'; fi`; \
#	then mv -f "$(DEPDIR)/mxfmux.Tpo" "$(DEPDIR)/mxfmux.Po"; else rm -f "$(DEPDIR)/mxfmux.Tpo"; exit 1; fi
#	source='elements/mxfmux.c' object='mxfmux.obj' libtool=no 
#	depfile='$(DEPDIR)/mxfmux.Po' tmpdepfile='$(DEPDIR)/mxfmux.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mxfmux.obj `if test -f 'elements/mxfmux.c'; then $(CYGPATH_W) 'elements/mxfmux.c'; else $(CYGPATH_W) '$(srcdir)/elements/mxfmux.c'; fi`

mxfmux.lo: elements/mxfmux.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mxfmux.lo -MD -MP -MF "$(DEPDIR)/mxfmux.Tpo" -c -o mxfmux.lo `test -f 'elements/mxfmux.c' || echo '$(srcdir)/'`elements/mxfmux.c; \
#	then mv -f "$(DEPDIR)/mxfmux.Tpo" "$(DEPDIR)/mxfmux.Plo"; else rm -f "$(DEPDIR)/mxfmux.Tpo"; exit 1; fi
#	source='elements/mxfmux.c' object='mxfmux.lo' libtool=yes 
#	depfile='$(DEPDIR)/mxfmux.Plo' tmpdepfile='$(DEPDIR)/mxfmux.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mxfmux.lo `test -f 'elements/mxfmux.c' || echo '$(srcdir)/'`elements/mxfmux.c

neonhttpsrc.o: elements/neonhttpsrc.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT neonhttpsrc.o -MD -MP -MF "$(DEPDIR)/neonhttpsrc.Tpo" -c -o neonhttpsrc.o `test -f 'elements/neonhttpsrc.c' || echo '$(srcdir)/'`elements/neonhttpsrc.c; \
#	then mv -f "$(DEPDIR)/neonhttpsrc.Tpo" "$(DEPDIR)/neonhttpsrc.Po"; else rm -f "$(DEPDIR)/neonhttpsrc.Tpo"; exit 1; fi
#	source='elements/neonhttpsrc.c' object='neonhttpsrc.o' libtool=no 
#	depfile='$(DEPDIR)/neonhttpsrc.Po' tmpdepfile='$(DEPDIR)/neonhttpsrc.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o neonhttpsrc.o `test -f 'elements/neonhttpsrc.c' || echo '$(srcdir)/'`elements/neonhttpsrc.c

neonhttpsrc.obj: elements/neonhttpsrc.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT neonhttpsrc.obj -MD -MP -MF "$(DEPDIR)/neonhttpsrc.Tpo" -c -o neonhttpsrc.obj `if test -f 'elements/neonhttpsrc.c'; then $(CYGPATH_W) 'elements/neonhttpsrc.c'; else $(CYGPATH_W) '$(srcdir)/elements/neonhttpsrc.c'; fi`; \
#	then mv -f "$(DEPDIR)/neonhttpsrc.Tpo" "$(DEPDIR)/neonhttpsrc.Po"; else rm -f "$(DEPDIR)/neonhttpsrc.Tpo"; exit 1; fi
#	source='elements/neonhttpsrc.c' object='neonhttpsrc.obj' libtool=no 
#	depfile='$(DEPDIR)/neonhttpsrc.Po' tmpdepfile='$(DEPDIR)/neonhttpsrc.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o neonhttpsrc.obj `if test -f 'elements/neonhttpsrc.c'; then $(CYGPATH_W) 'elements/neonhttpsrc.c'; else $(CYGPATH_W) '$(srcdir)/elements/neonhttpsrc.c'; fi`

neonhttpsrc.lo: elements/neonhttpsrc.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT neonhttpsrc.lo -MD -MP -MF "$(DEPDIR)/neonhttpsrc.Tpo" -c -o neonhttpsrc.lo `test -f 'elements/neonhttpsrc.c' || echo '$(srcdir)/'`elements/neonhttpsrc.c; \
#	then mv -f "$(DEPDIR)/neonhttpsrc.Tpo" "$(DEPDIR)/neonhttpsrc.Plo"; else rm -f "$(DEPDIR)/neonhttpsrc.Tpo"; exit 1; fi
#	source='elements/neonhttpsrc.c' object='neonhttpsrc.lo' libtool=yes 
#	depfile='$(DEPDIR)/neonhttpsrc.Plo' tmpdepfile='$(DEPDIR)/neonhttpsrc.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o neonhttpsrc.lo `test -f 'elements/neonhttpsrc.c' || echo '$(srcdir)/'`elements/neonhttpsrc.c

ofa.o: elements/ofa.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ofa.o -MD -MP -MF "$(DEPDIR)/ofa.Tpo" -c -o ofa.o `test -f 'elements/ofa.c' || echo '$(srcdir)/'`elements/ofa.c; \
#	then mv -f "$(DEPDIR)/ofa.Tpo" "$(DEPDIR)/ofa.Po"; else rm -f "$(DEPDIR)/ofa.Tpo"; exit 1; fi
#	source='elements/ofa.c' object='ofa.o' libtool=no 
#	depfile='$(DEPDIR)/ofa.Po' tmpdepfile='$(DEPDIR)/ofa.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ofa.o `test -f 'elements/ofa.c' || echo '$(srcdir)/'`elements/ofa.c

ofa.obj: elements/ofa.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ofa.obj -MD -MP -MF "$(DEPDIR)/ofa.Tpo" -c -o ofa.obj `if test -f 'elements/ofa.c'; then $(CYGPATH_W) 'elements/ofa.c'; else $(CYGPATH_W) '$(srcdir)/elements/ofa.c'; fi`; \
#	then mv -f "$(DEPDIR)/ofa.Tpo" "$(DEPDIR)/ofa.Po"; else rm -f "$(DEPDIR)/ofa.Tpo"; exit 1; fi
#	source='elements/ofa.c' object='ofa.obj' libtool=no 
#	depfile='$(DEPDIR)/ofa.Po' tmpdepfile='$(DEPDIR)/ofa.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ofa.obj `if test -f 'elements/ofa.c'; then $(CYGPATH_W) 'elements/ofa.c'; else $(CYGPATH_W) '$(srcdir)/elements/ofa.c'; fi`

ofa.lo: elements/ofa.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ofa.lo -MD -MP -MF "$(DEPDIR)/ofa.Tpo" -c -o ofa.lo `test -f 'elements/ofa.c' || echo '$(srcdir)/'`elements/ofa.c; \
#	then mv -f "$(DEPDIR)/ofa.Tpo" "$(DEPDIR)/ofa.Plo"; else rm -f "$(DEPDIR)/ofa.Tpo"; exit 1; fi
#	source='elements/ofa.c' object='ofa.lo' libtool=yes 
#	depfile='$(DEPDIR)/ofa.Plo' tmpdepfile='$(DEPDIR)/ofa.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ofa.lo `test -f 'elements/ofa.c' || echo '$(srcdir)/'`elements/ofa.c

qtmux.o: elements/qtmux.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qtmux.o -MD -MP -MF "$(DEPDIR)/qtmux.Tpo" -c -o qtmux.o `test -f 'elements/qtmux.c' || echo '$(srcdir)/'`elements/qtmux.c; \
#	then mv -f "$(DEPDIR)/qtmux.Tpo" "$(DEPDIR)/qtmux.Po"; else rm -f "$(DEPDIR)/qtmux.Tpo"; exit 1; fi
#	source='elements/qtmux.c' object='qtmux.o' libtool=no 
#	depfile='$(DEPDIR)/qtmux.Po' tmpdepfile='$(DEPDIR)/qtmux.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qtmux.o `test -f 'elements/qtmux.c' || echo '$(srcdir)/'`elements/qtmux.c

qtmux.obj: elements/qtmux.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qtmux.obj -MD -MP -MF "$(DEPDIR)/qtmux.Tpo" -c -o qtmux.obj `if test -f 'elements/qtmux.c'; then $(CYGPATH_W) 'elements/qtmux.c'; else $(CYGPATH_W) '$(srcdir)/elements/qtmux.c'; fi`; \
#	then mv -f "$(DEPDIR)/qtmux.Tpo" "$(DEPDIR)/qtmux.Po"; else rm -f "$(DEPDIR)/qtmux.Tpo"; exit 1; fi
#	source='elements/qtmux.c' object='qtmux.obj' libtool=no 
#	depfile='$(DEPDIR)/qtmux.Po' tmpdepfile='$(DEPDIR)/qtmux.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qtmux.obj `if test -f 'elements/qtmux.c'; then $(CYGPATH_W) 'elements/qtmux.c'; else $(CYGPATH_W) '$(srcdir)/elements/qtmux.c'; fi`

qtmux.lo: elements/qtmux.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT qtmux.lo -MD -MP -MF "$(DEPDIR)/qtmux.Tpo" -c -o qtmux.lo `test -f 'elements/qtmux.c' || echo '$(srcdir)/'`elements/qtmux.c; \
#	then mv -f "$(DEPDIR)/qtmux.Tpo" "$(DEPDIR)/qtmux.Plo"; else rm -f "$(DEPDIR)/qtmux.Tpo"; exit 1; fi
#	source='elements/qtmux.c' object='qtmux.lo' libtool=yes 
#	depfile='$(DEPDIR)/qtmux.Plo' tmpdepfile='$(DEPDIR)/qtmux.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o qtmux.lo `test -f 'elements/qtmux.c' || echo '$(srcdir)/'`elements/qtmux.c

rtpbin.o: elements/rtpbin.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rtpbin.o -MD -MP -MF "$(DEPDIR)/rtpbin.Tpo" -c -o rtpbin.o `test -f 'elements/rtpbin.c' || echo '$(srcdir)/'`elements/rtpbin.c; \
#	then mv -f "$(DEPDIR)/rtpbin.Tpo" "$(DEPDIR)/rtpbin.Po"; else rm -f "$(DEPDIR)/rtpbin.Tpo"; exit 1; fi
#	source='elements/rtpbin.c' object='rtpbin.o' libtool=no 
#	depfile='$(DEPDIR)/rtpbin.Po' tmpdepfile='$(DEPDIR)/rtpbin.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rtpbin.o `test -f 'elements/rtpbin.c' || echo '$(srcdir)/'`elements/rtpbin.c

rtpbin.obj: elements/rtpbin.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rtpbin.obj -MD -MP -MF "$(DEPDIR)/rtpbin.Tpo" -c -o rtpbin.obj `if test -f 'elements/rtpbin.c'; then $(CYGPATH_W) 'elements/rtpbin.c'; else $(CYGPATH_W) '$(srcdir)/elements/rtpbin.c'; fi`; \
#	then mv -f "$(DEPDIR)/rtpbin.Tpo" "$(DEPDIR)/rtpbin.Po"; else rm -f "$(DEPDIR)/rtpbin.Tpo"; exit 1; fi
#	source='elements/rtpbin.c' object='rtpbin.obj' libtool=no 
#	depfile='$(DEPDIR)/rtpbin.Po' tmpdepfile='$(DEPDIR)/rtpbin.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rtpbin.obj `if test -f 'elements/rtpbin.c'; then $(CYGPATH_W) 'elements/rtpbin.c'; else $(CYGPATH_W) '$(srcdir)/elements/rtpbin.c'; fi`

rtpbin.lo: elements/rtpbin.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rtpbin.lo -MD -MP -MF "$(DEPDIR)/rtpbin.Tpo" -c -o rtpbin.lo `test -f 'elements/rtpbin.c' || echo '$(srcdir)/'`elements/rtpbin.c; \
#	then mv -f "$(DEPDIR)/rtpbin.Tpo" "$(DEPDIR)/rtpbin.Plo"; else rm -f "$(DEPDIR)/rtpbin.Tpo"; exit 1; fi
#	source='elements/rtpbin.c' object='rtpbin.lo' libtool=yes 
#	depfile='$(DEPDIR)/rtpbin.Plo' tmpdepfile='$(DEPDIR)/rtpbin.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rtpbin.lo `test -f 'elements/rtpbin.c' || echo '$(srcdir)/'`elements/rtpbin.c

elements_rtpbin_buffer_list-rtpbin_buffer_list.o: elements/rtpbin_buffer_list.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_rtpbin_buffer_list_CFLAGS) $(CFLAGS) -MT elements_rtpbin_buffer_list-rtpbin_buffer_list.o -MD -MP -MF "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Tpo" -c -o elements_rtpbin_buffer_list-rtpbin_buffer_list.o `test -f 'elements/rtpbin_buffer_list.c' || echo '$(srcdir)/'`elements/rtpbin_buffer_list.c; \
#	then mv -f "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Tpo" "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Po"; else rm -f "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Tpo"; exit 1; fi
#	source='elements/rtpbin_buffer_list.c' object='elements_rtpbin_buffer_list-rtpbin_buffer_list.o' libtool=no 
#	depfile='$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Po' tmpdepfile='$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_rtpbin_buffer_list_CFLAGS) $(CFLAGS) -c -o elements_rtpbin_buffer_list-rtpbin_buffer_list.o `test -f 'elements/rtpbin_buffer_list.c' || echo '$(srcdir)/'`elements/rtpbin_buffer_list.c

elements_rtpbin_buffer_list-rtpbin_buffer_list.obj: elements/rtpbin_buffer_list.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_rtpbin_buffer_list_CFLAGS) $(CFLAGS) -MT elements_rtpbin_buffer_list-rtpbin_buffer_list.obj -MD -MP -MF "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Tpo" -c -o elements_rtpbin_buffer_list-rtpbin_buffer_list.obj `if test -f 'elements/rtpbin_buffer_list.c'; then $(CYGPATH_W) 'elements/rtpbin_buffer_list.c'; else $(CYGPATH_W) '$(srcdir)/elements/rtpbin_buffer_list.c'; fi`; \
#	then mv -f "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Tpo" "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Po"; else rm -f "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Tpo"; exit 1; fi
#	source='elements/rtpbin_buffer_list.c' object='elements_rtpbin_buffer_list-rtpbin_buffer_list.obj' libtool=no 
#	depfile='$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Po' tmpdepfile='$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_rtpbin_buffer_list_CFLAGS) $(CFLAGS) -c -o elements_rtpbin_buffer_list-rtpbin_buffer_list.obj `if test -f 'elements/rtpbin_buffer_list.c'; then $(CYGPATH_W) 'elements/rtpbin_buffer_list.c'; else $(CYGPATH_W) '$(srcdir)/elements/rtpbin_buffer_list.c'; fi`

elements_rtpbin_buffer_list-rtpbin_buffer_list.lo: elements/rtpbin_buffer_list.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_rtpbin_buffer_list_CFLAGS) $(CFLAGS) -MT elements_rtpbin_buffer_list-rtpbin_buffer_list.lo -MD -MP -MF "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Tpo" -c -o elements_rtpbin_buffer_list-rtpbin_buffer_list.lo `test -f 'elements/rtpbin_buffer_list.c' || echo '$(srcdir)/'`elements/rtpbin_buffer_list.c; \
#	then mv -f "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Tpo" "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Plo"; else rm -f "$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Tpo"; exit 1; fi
#	source='elements/rtpbin_buffer_list.c' object='elements_rtpbin_buffer_list-rtpbin_buffer_list.lo' libtool=yes 
#	depfile='$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.Plo' tmpdepfile='$(DEPDIR)/elements_rtpbin_buffer_list-rtpbin_buffer_list.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_rtpbin_buffer_list_CFLAGS) $(CFLAGS) -c -o elements_rtpbin_buffer_list-rtpbin_buffer_list.lo `test -f 'elements/rtpbin_buffer_list.c' || echo '$(srcdir)/'`elements/rtpbin_buffer_list.c

selector.o: elements/selector.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT selector.o -MD -MP -MF "$(DEPDIR)/selector.Tpo" -c -o selector.o `test -f 'elements/selector.c' || echo '$(srcdir)/'`elements/selector.c; \
#	then mv -f "$(DEPDIR)/selector.Tpo" "$(DEPDIR)/selector.Po"; else rm -f "$(DEPDIR)/selector.Tpo"; exit 1; fi
#	source='elements/selector.c' object='selector.o' libtool=no 
#	depfile='$(DEPDIR)/selector.Po' tmpdepfile='$(DEPDIR)/selector.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o selector.o `test -f 'elements/selector.c' || echo '$(srcdir)/'`elements/selector.c

selector.obj: elements/selector.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT selector.obj -MD -MP -MF "$(DEPDIR)/selector.Tpo" -c -o selector.obj `if test -f 'elements/selector.c'; then $(CYGPATH_W) 'elements/selector.c'; else $(CYGPATH_W) '$(srcdir)/elements/selector.c'; fi`; \
#	then mv -f "$(DEPDIR)/selector.Tpo" "$(DEPDIR)/selector.Po"; else rm -f "$(DEPDIR)/selector.Tpo"; exit 1; fi
#	source='elements/selector.c' object='selector.obj' libtool=no 
#	depfile='$(DEPDIR)/selector.Po' tmpdepfile='$(DEPDIR)/selector.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o selector.obj `if test -f 'elements/selector.c'; then $(CYGPATH_W) 'elements/selector.c'; else $(CYGPATH_W) '$(srcdir)/elements/selector.c'; fi`

selector.lo: elements/selector.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT selector.lo -MD -MP -MF "$(DEPDIR)/selector.Tpo" -c -o selector.lo `test -f 'elements/selector.c' || echo '$(srcdir)/'`elements/selector.c; \
#	then mv -f "$(DEPDIR)/selector.Tpo" "$(DEPDIR)/selector.Plo"; else rm -f "$(DEPDIR)/selector.Tpo"; exit 1; fi
#	source='elements/selector.c' object='selector.lo' libtool=yes 
#	depfile='$(DEPDIR)/selector.Plo' tmpdepfile='$(DEPDIR)/selector.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o selector.lo `test -f 'elements/selector.c' || echo '$(srcdir)/'`elements/selector.c

shapewipe.o: elements/shapewipe.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shapewipe.o -MD -MP -MF "$(DEPDIR)/shapewipe.Tpo" -c -o shapewipe.o `test -f 'elements/shapewipe.c' || echo '$(srcdir)/'`elements/shapewipe.c; \
#	then mv -f "$(DEPDIR)/shapewipe.Tpo" "$(DEPDIR)/shapewipe.Po"; else rm -f "$(DEPDIR)/shapewipe.Tpo"; exit 1; fi
#	source='elements/shapewipe.c' object='shapewipe.o' libtool=no 
#	depfile='$(DEPDIR)/shapewipe.Po' tmpdepfile='$(DEPDIR)/shapewipe.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shapewipe.o `test -f 'elements/shapewipe.c' || echo '$(srcdir)/'`elements/shapewipe.c

shapewipe.obj: elements/shapewipe.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shapewipe.obj -MD -MP -MF "$(DEPDIR)/shapewipe.Tpo" -c -o shapewipe.obj `if test -f 'elements/shapewipe.c'; then $(CYGPATH_W) 'elements/shapewipe.c'; else $(CYGPATH_W) '$(srcdir)/elements/shapewipe.c'; fi`; \
#	then mv -f "$(DEPDIR)/shapewipe.Tpo" "$(DEPDIR)/shapewipe.Po"; else rm -f "$(DEPDIR)/shapewipe.Tpo"; exit 1; fi
#	source='elements/shapewipe.c' object='shapewipe.obj' libtool=no 
#	depfile='$(DEPDIR)/shapewipe.Po' tmpdepfile='$(DEPDIR)/shapewipe.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shapewipe.obj `if test -f 'elements/shapewipe.c'; then $(CYGPATH_W) 'elements/shapewipe.c'; else $(CYGPATH_W) '$(srcdir)/elements/shapewipe.c'; fi`

shapewipe.lo: elements/shapewipe.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT shapewipe.lo -MD -MP -MF "$(DEPDIR)/shapewipe.Tpo" -c -o shapewipe.lo `test -f 'elements/shapewipe.c' || echo '$(srcdir)/'`elements/shapewipe.c; \
#	then mv -f "$(DEPDIR)/shapewipe.Tpo" "$(DEPDIR)/shapewipe.Plo"; else rm -f "$(DEPDIR)/shapewipe.Tpo"; exit 1; fi
#	source='elements/shapewipe.c' object='shapewipe.lo' libtool=yes 
#	depfile='$(DEPDIR)/shapewipe.Plo' tmpdepfile='$(DEPDIR)/shapewipe.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o shapewipe.lo `test -f 'elements/shapewipe.c' || echo '$(srcdir)/'`elements/shapewipe.c

elements_timidity-timidity.o: elements/timidity.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_timidity_CFLAGS) $(CFLAGS) -MT elements_timidity-timidity.o -MD -MP -MF "$(DEPDIR)/elements_timidity-timidity.Tpo" -c -o elements_timidity-timidity.o `test -f 'elements/timidity.c' || echo '$(srcdir)/'`elements/timidity.c; \
#	then mv -f "$(DEPDIR)/elements_timidity-timidity.Tpo" "$(DEPDIR)/elements_timidity-timidity.Po"; else rm -f "$(DEPDIR)/elements_timidity-timidity.Tpo"; exit 1; fi
#	source='elements/timidity.c' object='elements_timidity-timidity.o' libtool=no 
#	depfile='$(DEPDIR)/elements_timidity-timidity.Po' tmpdepfile='$(DEPDIR)/elements_timidity-timidity.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_timidity_CFLAGS) $(CFLAGS) -c -o elements_timidity-timidity.o `test -f 'elements/timidity.c' || echo '$(srcdir)/'`elements/timidity.c

elements_timidity-timidity.obj: elements/timidity.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_timidity_CFLAGS) $(CFLAGS) -MT elements_timidity-timidity.obj -MD -MP -MF "$(DEPDIR)/elements_timidity-timidity.Tpo" -c -o elements_timidity-timidity.obj `if test -f 'elements/timidity.c'; then $(CYGPATH_W) 'elements/timidity.c'; else $(CYGPATH_W) '$(srcdir)/elements/timidity.c'; fi`; \
#	then mv -f "$(DEPDIR)/elements_timidity-timidity.Tpo" "$(DEPDIR)/elements_timidity-timidity.Po"; else rm -f "$(DEPDIR)/elements_timidity-timidity.Tpo"; exit 1; fi
#	source='elements/timidity.c' object='elements_timidity-timidity.obj' libtool=no 
#	depfile='$(DEPDIR)/elements_timidity-timidity.Po' tmpdepfile='$(DEPDIR)/elements_timidity-timidity.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_timidity_CFLAGS) $(CFLAGS) -c -o elements_timidity-timidity.obj `if test -f 'elements/timidity.c'; then $(CYGPATH_W) 'elements/timidity.c'; else $(CYGPATH_W) '$(srcdir)/elements/timidity.c'; fi`

elements_timidity-timidity.lo: elements/timidity.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_timidity_CFLAGS) $(CFLAGS) -MT elements_timidity-timidity.lo -MD -MP -MF "$(DEPDIR)/elements_timidity-timidity.Tpo" -c -o elements_timidity-timidity.lo `test -f 'elements/timidity.c' || echo '$(srcdir)/'`elements/timidity.c; \
#	then mv -f "$(DEPDIR)/elements_timidity-timidity.Tpo" "$(DEPDIR)/elements_timidity-timidity.Plo"; else rm -f "$(DEPDIR)/elements_timidity-timidity.Tpo"; exit 1; fi
#	source='elements/timidity.c' object='elements_timidity-timidity.lo' libtool=yes 
#	depfile='$(DEPDIR)/elements_timidity-timidity.Plo' tmpdepfile='$(DEPDIR)/elements_timidity-timidity.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(elements_timidity_CFLAGS) $(CFLAGS) -c -o elements_timidity-timidity.lo `test -f 'elements/timidity.c' || echo '$(srcdir)/'`elements/timidity.c

states.o: generic/states.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT states.o -MD -MP -MF "$(DEPDIR)/states.Tpo" -c -o states.o `test -f 'generic/states.c' || echo '$(srcdir)/'`generic/states.c; \
#	then mv -f "$(DEPDIR)/states.Tpo" "$(DEPDIR)/states.Po"; else rm -f "$(DEPDIR)/states.Tpo"; exit 1; fi
#	source='generic/states.c' object='states.o' libtool=no 
#	depfile='$(DEPDIR)/states.Po' tmpdepfile='$(DEPDIR)/states.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o states.o `test -f 'generic/states.c' || echo '$(srcdir)/'`generic/states.c

states.obj: generic/states.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT states.obj -MD -MP -MF "$(DEPDIR)/states.Tpo" -c -o states.obj `if test -f 'generic/states.c'; then $(CYGPATH_W) 'generic/states.c'; else $(CYGPATH_W) '$(srcdir)/generic/states.c'; fi`; \
#	then mv -f "$(DEPDIR)/states.Tpo" "$(DEPDIR)/states.Po"; else rm -f "$(DEPDIR)/states.Tpo"; exit 1; fi
#	source='generic/states.c' object='states.obj' libtool=no 
#	depfile='$(DEPDIR)/states.Po' tmpdepfile='$(DEPDIR)/states.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o states.obj `if test -f 'generic/states.c'; then $(CYGPATH_W) 'generic/states.c'; else $(CYGPATH_W) '$(srcdir)/generic/states.c'; fi`

states.lo: generic/states.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT states.lo -MD -MP -MF "$(DEPDIR)/states.Tpo" -c -o states.lo `test -f 'generic/states.c' || echo '$(srcdir)/'`generic/states.c; \
#	then mv -f "$(DEPDIR)/states.Tpo" "$(DEPDIR)/states.Plo"; else rm -f "$(DEPDIR)/states.Tpo"; exit 1; fi
#	source='generic/states.c' object='states.lo' libtool=yes 
#	depfile='$(DEPDIR)/states.Plo' tmpdepfile='$(DEPDIR)/states.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o states.lo `test -f 'generic/states.c' || echo '$(srcdir)/'`generic/states.c

metadata.o: pipelines/metadata.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT metadata.o -MD -MP -MF "$(DEPDIR)/metadata.Tpo" -c -o metadata.o `test -f 'pipelines/metadata.c' || echo '$(srcdir)/'`pipelines/metadata.c; \
#	then mv -f "$(DEPDIR)/metadata.Tpo" "$(DEPDIR)/metadata.Po"; else rm -f "$(DEPDIR)/metadata.Tpo"; exit 1; fi
#	source='pipelines/metadata.c' object='metadata.o' libtool=no 
#	depfile='$(DEPDIR)/metadata.Po' tmpdepfile='$(DEPDIR)/metadata.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o metadata.o `test -f 'pipelines/metadata.c' || echo '$(srcdir)/'`pipelines/metadata.c

metadata.obj: pipelines/metadata.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT metadata.obj -MD -MP -MF "$(DEPDIR)/metadata.Tpo" -c -o metadata.obj `if test -f 'pipelines/metadata.c'; then $(CYGPATH_W) 'pipelines/metadata.c'; else $(CYGPATH_W) '$(srcdir)/pipelines/metadata.c'; fi`; \
#	then mv -f "$(DEPDIR)/metadata.Tpo" "$(DEPDIR)/metadata.Po"; else rm -f "$(DEPDIR)/metadata.Tpo"; exit 1; fi
#	source='pipelines/metadata.c' object='metadata.obj' libtool=no 
#	depfile='$(DEPDIR)/metadata.Po' tmpdepfile='$(DEPDIR)/metadata.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o metadata.obj `if test -f 'pipelines/metadata.c'; then $(CYGPATH_W) 'pipelines/metadata.c'; else $(CYGPATH_W) '$(srcdir)/pipelines/metadata.c'; fi`

metadata.lo: pipelines/metadata.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT metadata.lo -MD -MP -MF "$(DEPDIR)/metadata.Tpo" -c -o metadata.lo `test -f 'pipelines/metadata.c' || echo '$(srcdir)/'`pipelines/metadata.c; \
#	then mv -f "$(DEPDIR)/metadata.Tpo" "$(DEPDIR)/metadata.Plo"; else rm -f "$(DEPDIR)/metadata.Tpo"; exit 1; fi
#	source='pipelines/metadata.c' object='metadata.lo' libtool=yes 
#	depfile='$(DEPDIR)/metadata.Plo' tmpdepfile='$(DEPDIR)/metadata.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o metadata.lo `test -f 'pipelines/metadata.c' || echo '$(srcdir)/'`pipelines/metadata.c

mxf.o: pipelines/mxf.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mxf.o -MD -MP -MF "$(DEPDIR)/mxf.Tpo" -c -o mxf.o `test -f 'pipelines/mxf.c' || echo '$(srcdir)/'`pipelines/mxf.c; \
#	then mv -f "$(DEPDIR)/mxf.Tpo" "$(DEPDIR)/mxf.Po"; else rm -f "$(DEPDIR)/mxf.Tpo"; exit 1; fi
#	source='pipelines/mxf.c' object='mxf.o' libtool=no 
#	depfile='$(DEPDIR)/mxf.Po' tmpdepfile='$(DEPDIR)/mxf.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mxf.o `test -f 'pipelines/mxf.c' || echo '$(srcdir)/'`pipelines/mxf.c

mxf.obj: pipelines/mxf.c
#	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mxf.obj -MD -MP -MF "$(DEPDIR)/mxf.Tpo" -c -o mxf.obj `if test -f 'pipelines/mxf.c'; then $(CYGPATH_W) 'pipelines/mxf.c'; else $(CYGPATH_W) '$(srcdir)/pipelines/mxf.c'; fi`; \
#	then mv -f "$(DEPDIR)/mxf.Tpo" "$(DEPDIR)/mxf.Po"; else rm -f "$(DEPDIR)/mxf.Tpo"; exit 1; fi
#	source='pipelines/mxf.c' object='mxf.obj' libtool=no 
#	depfile='$(DEPDIR)/mxf.Po' tmpdepfile='$(DEPDIR)/mxf.TPo' 
#	$(CCDEPMODE) $(depcomp) 
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mxf.obj `if test -f 'pipelines/mxf.c'; then $(CYGPATH_W) 'pipelines/mxf.c'; else $(CYGPATH_W) '$(srcdir)/pipelines/mxf.c'; fi`

mxf.lo: pipelines/mxf.c
#	if $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mxf.lo -MD -MP -MF "$(DEPDIR)/mxf.Tpo" -c -o mxf.lo `test -f 'pipelines/mxf.c' || echo '$(srcdir)/'`pipelines/mxf.c; \
#	then mv -f "$(DEPDIR)/mxf.Tpo" "$(DEPDIR)/mxf.Plo"; else rm -f "$(DEPDIR)/mxf.Tpo"; exit 1; fi
#	source='pipelines/mxf.c' object='mxf.lo' libtool=yes 
#	depfile='$(DEPDIR)/mxf.Plo' tmpdepfile='$(DEPDIR)/mxf.TPlo' 
#	$(CCDEPMODE) $(depcomp) 
	$(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mxf.lo `test -f 'pipelines/mxf.c' || echo '$(srcdir)/'`pipelines/mxf.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../../common $(distdir)/elements
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)
	-rm -f generic/$(am__dirstamp)
	-rm -f pipelines/$(am__dirstamp)
	-rm -f elements/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am


# keep target around, since it's referenced in the modules' Makefiles
clean-local-check:
	@echo

# hangs spectacularly on some machines, so let's not do this by default yet
#check-valgrind:
#	$(MAKE) valgrind
check-valgrind:
	@true

# run any given test by running make test.check
# if the test fails, run it again at at least debug level 2
%.check: %
	@$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=20					\
	$* ||							\
	$(TESTS_ENVIRONMENT)					\
	GST_DEBUG=$$GST_DEBUG,*:2				\
	CK_DEFAULT_TIMEOUT=20					\
	$*

# run any given test in a loop
%.torture: %
	@for i in `seq 1 $(LOOPS)`; do				\
	$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=20					\
	$*; done

# run any given test in an infinite loop
%.forever: %
	@while true; do						\
	$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=20					\
	$* || break; done

# valgrind any given test by running make test.valgrind
%.valgrind: %
	$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=360					\
	G_SLICE=always-malloc					\
	libtool --mode=execute					\
	$(VALGRIND_PATH) -q					\
	$(foreach s,$(SUPPRESSIONS),--suppressions=$(s))	\
	--tool=memcheck --leak-check=full --trace-children=yes	\
	--leak-resolution=high --num-callers=20			\
	./$* 2>&1 | tee valgrind.log
	@if grep "==" valgrind.log > /dev/null 2>&1; then	\
	    rm valgrind.log;					\
	    exit 1;						\
	fi
	@rm valgrind.log

# valgrind any given test and generate suppressions for it
%.valgrind.gen-suppressions: %
	$(TESTS_ENVIRONMENT)					\
	CK_DEFAULT_TIMEOUT=360					\
	G_SLICE=always-malloc					\
	libtool --mode=execute					\
	$(VALGRIND_PATH) -q 					\
	$(foreach s,$(SUPPRESSIONS),--suppressions=$(s))	\
	--tool=memcheck --leak-check=full --trace-children=yes	\
	--leak-resolution=high --num-callers=20			\
	--gen-suppressions=all					\
	./$* 2>&1 | tee suppressions.log

# valgrind any given test until failure by running make test.valgrind-forever
%.valgrind-forever: %
	@while $(MAKE) $*.valgrind; do				\
	  true; done

# gdb any given test by running make test.gdb
%.gdb: %
	$(TESTS_ENVIRONMENT)					\
	CK_FORK=no						\
	libtool --mode=execute					\
	gdb $*

# torture tests
torture: $(TESTS)
	-rm test-registry.xml
	@echo "Torturing tests ..."
	for i in `seq 1 $(LOOPS)`; do				\
		$(MAKE) check ||					\
		(echo "Failure after $$i runs"; exit 1) ||	\
		exit 1;						\
	done
	@banner="All $(LOOPS) loops passed";			\
	dashes=`echo "$$banner" | sed s/./=/g`;			\
	echo $$dashes; echo $$banner; echo $$dashes

# forever tests
forever: $(TESTS)
	-rm test-registry.xml
	@echo "Forever tests ..."
	while true; do						\
		$(MAKE) check ||					\
		(echo "Failure"; exit 1) ||			\
		exit 1;						\
	done

# valgrind all tests
valgrind: $(TESTS)
	@echo "Valgrinding tests ..."
	@failed=0;							\
	for t in $(filter-out $(VALGRIND_TESTS_DISABLE),$(TESTS)); do	\
		$(MAKE) $$t.valgrind;					\
		if test "$$?" -ne 0; then                               \
                        echo "Valgrind error for test $$t";		\
			failed=`expr $$failed + 1`;			\
			whicht="$$whicht $$t";				\
                fi;							\
	done;								\
	if test "$$failed" -ne 0; then					\
		echo "$$failed tests had leaks or errors under valgrind:";	\
		echo "$$whicht";					\
		false;							\
	fi
inspect:
	@echo "Inspecting features ..."
	for e in `$(TESTS_ENVIRONMENT) $(GST_INSPECT) | head -n -2 	\
	  | cut -d: -f2`;						\
	  do echo Inspecting $$e;					\
	     $(GST_INSPECT) $$e > /dev/null 2>&1; done

help:
	@echo
	@echo "make check                         -- run all checks"
	@echo "make torture                       -- run all checks $(LOOPS) times"
	@echo "make (dir)/(test).check            -- run the given check once"
	@echo "make (dir)/(test).forever          -- run the given check forever"
	@echo "make (dir)/(test).torture          -- run the given check $(LOOPS) times"
	@echo
	@echo "make (dir)/(test).gdb              -- start up gdb for the given test"
	@echo
	@echo "make valgrind                      -- valgrind all tests"
	@echo "make (dir)/(test).valgrind         -- valgrind the given test"
	@echo "make (dir)/(test).valgrind-forever -- valgrind the given test forever"
	@echo "make (dir)/(test).valgrind.gen-suppressions -- generate suppressions"
	@echo "                                               and save to suppressions.log"
	@echo "make inspect                       -- inspect all plugin features"
	@echo
	@echo
	@echo "Additionally, you can use the GST_CHECKS environment variable to"
	@echo "specify which test(s) should be run. This is useful if you are"
	@echo "debugging a failure in one particular test, or want to reproduce"
	@echo "a race condition in a single test."
	@echo
	@echo "Examples:"
	@echo
	@echo "  GST_CHECKS=test_this,test_that  make element/foobar.check"
	@echo "  GST_CHECKS=test_many_threads    make element/foobar.forever"
	@echo

# override to _not_ install the test plugins
install-pluginLTLIBRARIES:

clean-local: clean-local-check
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
