# Makefile.in generated by automake 1.10.1 from Makefile.am.
# docs/plugins/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# this snippet is to be included by both our docbook manuals
# and gtk-doc API references

# it adds an upload target to each of these dir's Makefiles

# each Makefile.am should define the following variables:
# - DOC: the base name of the documentation
#        (faq, manual, pwg, gstreamer, gstreamer-libs)
# - FORMATS: the formats in which DOC is output
#            (html ps pdf)

# if you want to use it, make sure your ..sh/config file contains the
# correct User entry for the Host entry for the DOC_SERVER

# This is an include file specifically tuned for building documentation
# for GStreamer plug-ins

pkgdatadir = $(datadir)/gst-plugins-ugly
pkglibdir = $(libdir)/gst-plugins-ugly
pkgincludedir = $(includedir)/gst-plugins-ugly
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = arm-unknown-linux-gnueabi
host_triplet = arm-unknown-linux-gnueabi
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/common/gtk-doc-plugins.mak \
	$(top_srcdir)/common/upload-doc.mak
subdir = docs/plugins
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/common/m4/as-ac-expand.m4 \
	$(top_srcdir)/common/m4/as-auto-alt.m4 \
	$(top_srcdir)/common/m4/as-compiler-flag.m4 \
	$(top_srcdir)/common/m4/as-python.m4 \
	$(top_srcdir)/common/m4/as-scrub-include.m4 \
	$(top_srcdir)/common/m4/as-version.m4 \
	$(top_srcdir)/common/m4/ax_create_stdint_h.m4 \
	$(top_srcdir)/common/m4/gst-arch.m4 \
	$(top_srcdir)/common/m4/gst-args.m4 \
	$(top_srcdir)/common/m4/gst-check.m4 \
	$(top_srcdir)/common/m4/gst-default.m4 \
	$(top_srcdir)/common/m4/gst-dowhile.m4 \
	$(top_srcdir)/common/m4/gst-error.m4 \
	$(top_srcdir)/common/m4/gst-feature.m4 \
	$(top_srcdir)/common/m4/gst-function.m4 \
	$(top_srcdir)/common/m4/gst-gettext.m4 \
	$(top_srcdir)/common/m4/gst-glib2.m4 \
	$(top_srcdir)/common/m4/gst-plugin-docs.m4 \
	$(top_srcdir)/common/m4/gst-plugindir.m4 \
	$(top_srcdir)/common/m4/gst.m4 \
	$(top_srcdir)/common/m4/gtk-doc.m4 \
	$(top_srcdir)/common/m4/pkg.m4 \
	$(top_srcdir)/common/m4/shave.m4 $(top_srcdir)/m4/a52.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/gst-sid.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/intlmacosx.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
SOURCES =
DIST_SOURCES =
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
A52DEC_CFLAGS = 
A52DEC_LIBS = 
ACLOCAL = ${SHELL} /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/missing --run aclocal-1.10
ACLOCAL_AMFLAGS = -I m4 -I common/m4
AMRNB_LIBS = 
AMTAR = ${SHELL} /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/missing --run tar
AM_MAKEFLAGS = `test -z $V && echo -s`
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/missing --run autoconf
AUTOHEADER = ${SHELL} /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/missing --run autoheader
AUTOMAKE = ${SHELL} /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/missing --run automake-1.10
AWK = gawk
CC = /bin/sh /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/common/shave cc cc
CCASFLAGS = 
CCDEPMODE = depmode=none
CDIO_CFLAGS = 
CDIO_LIBS = 
CFLAGS = -g -Wall -O2 -Wno-error
CPP = cc -E
CPPFLAGS = 
CXX = /bin/sh /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/common/shave cxx g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -g -Wall -O2 -Wno-error
CYGPATH_W = echo
DEFAULT_AUDIOSINK = autoaudiosink
DEFAULT_AUDIOSRC = alsasrc
DEFAULT_VIDEOSINK = autovideosink
DEFAULT_VIDEOSRC = v4l2src
DEFAULT_VISUALIZER = goom
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEPRECATED_CFLAGS = 
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
DVDNAV_CFLAGS = 
DVDNAV_CONFIG = 
DVDNAV_LIBS = 
DVDREAD_LIBS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /scratchbox/tools/bin/grep -E
ERROR_CFLAGS = -Wall -Wdeclaration-after-statement -Wpointer-arith -Werror
ERROR_CXXFLAGS = -Wall -Werror -Wno-non-virtual-dtor
EXEEXT = 
F77 = /bin/sh /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/common/shave f77 
FC = /bin/sh /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/common/shave fc 
FFLAGS = 
FGREP = /scratchbox/tools/bin/grep -F
GCOV = 
GCOV_CFLAGS = 
GCOV_LIBS = 
GETTEXT_MACRO_VERSION = 0.17
GETTEXT_PACKAGE = gst-plugins-ugly-0.10
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include
GLIB_LIBS = -pthread -lgobject-2.0 -lgthread-2.0 -lrt -lgmodule-2.0 -lglib-2.0  
GLIB_PREFIX = /usr
GLIB_REQ = 2.12
GMSGFMT = /scratchbox/tools/bin/msgfmt
GMSGFMT_015 = /scratchbox/tools/bin/msgfmt
GREP = /scratchbox/tools/bin/grep
GSTPB_PLUGINS_DIR = /usr/lib/gstreamer-0.10
GSTPB_PREFIX = /usr
GST_ALL_LDFLAGS = -no-undefined
GST_BASE_CFLAGS = -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2  
GST_BASE_LIBS = -pthread -lgstbase-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_CFLAGS = -I$(top_srcdir)/gst-libs -I$(top_builddir)/gst-libs -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2   $(GST_OPTION_CFLAGS)
GST_CHECK_CFLAGS = -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2  
GST_CHECK_LIBS = -pthread -lgstcheck-0.10 -lcheck_pic -lm -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_CXXFLAGS = -I$(top_srcdir)/gst-libs -I$(top_builddir)/gst-libs  $(GST_OPTION_CXXFLAGS)
GST_LEVEL_DEFAULT = GST_LEVEL_ERROR
GST_LIBS = -pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_LICENSE = LGPL
GST_MAJORMINOR = 0.10
GST_OPTION_CFLAGS = $(ERROR_CFLAGS) $(DEBUG_CFLAGS) $(PROFILE_CFLAGS) $(GCOV_CFLAGS) $(OPT_CFLAGS) $(DEPRECATED_CFLAGS)
GST_OPTION_CXXFLAGS = $(ERROR_CXXFLAGS) $(DEBUG_CFLAGS) $(PROFILE_CFLAGS) $(GCOV_CFLAGS) $(OPT_CFLAGS) $(DEPRECATED_CFLAGS)
GST_PACKAGE_NAME = GStreamer RealMedia Plugins (Maemo)
GST_PACKAGE_ORIGIN = http://maemo.org
GST_PLUGINS_ALL =  asfdemux dvdlpcmdec dvdsub iec958 mpegaudioparse mpegstream realmedia synaesthesia
GST_PLUGINS_BASE_CFLAGS = -pthread -I/usr/include/gstreamer-0.10 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/libxml2  
GST_PLUGINS_BASE_LIBS = -pthread -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lrt -lxml2 -lglib-2.0  
GST_PLUGINS_DIR = /usr/lib/gstreamer-0.10
GST_PLUGINS_SELECTED =               realmedia 
GST_PLUGIN_LDFLAGS = -module -avoid-version -export-symbols-regex '^_*gst_plugin_desc$$' -no-undefined
GST_PREFIX = /usr
GST_TOOLS_DIR = /usr/bin
GTKDOC_CHECK = /usr/bin/gtkdoc-check
HAVE_AMRNB = 
HAVE_CXX = yes
HAVE_DVDREAD = 
HAVE_LAME = 
HTML_DIR = ${datadir}/gtk-doc/html
ID3TAG_CFLAGS = 
ID3TAG_LIBS = 
INSTALL = /scratchbox/tools/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LAME_CFLAGS = 
LAME_LIBS = 
LD = /scratchbox/compilers/cs2007q3-glibc2.5-arm7/arm-none-linux-gnueabi/bin/ld
LDFLAGS = -Wl,-O1 -Wl,--as-needed
LIBICONV = -liconv
LIBINTL = 
LIBM = -lm
LIBOBJS = 
LIBOIL_CFLAGS = -I/usr/include/liboil-0.3  
LIBOIL_LIBS = -loil-0.3 -lm -lrt  
LIBS = 
LIBTOOL = /bin/sh /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/common/shave-libtool '$(SHELL) $(top_builddir)/libtool'
LIPO = 
LN_S = ln -s
LOCALEDIR = /usr/share/locale
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBOBJS = 
MAD_CFLAGS = 
MAD_LIBS = 
MAINT = #
MAKEFLAGS = -s
MAKEINFO = ${SHELL} /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/missing --run makeinfo
MKDIR_P = /scratchbox/tools/bin/mkdir -p
MPEG2DEC_CFLAGS = 
MPEG2DEC_LIBS = 
MSGFMT = /scratchbox/tools/bin/msgfmt
MSGFMT_015 = /scratchbox/tools/bin/msgfmt
MSGMERGE = /scratchbox/tools/bin/msgmerge
NM = /scratchbox/compilers/bin/nm -B
NMEDIT = 
OBJC = /bin/sh /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/common/shave objc 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = gst-plugins-ugly
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=GStreamer
PACKAGE_NAME = GStreamer Ugly Plug-ins
PACKAGE_STRING = GStreamer Ugly Plug-ins 0.10.10.2
PACKAGE_TARNAME = gst-plugins-ugly
PACKAGE_VERSION = 0.10.10.2
PACKAGE_VERSION_MAJOR = 0
PACKAGE_VERSION_MICRO = 10
PACKAGE_VERSION_MINOR = 10
PACKAGE_VERSION_NANO = 2
PACKAGE_VERSION_RELEASE = 0.20100104.182307
PATH_SEPARATOR = :
PKG_CONFIG = /scratchbox/tools/bin/pkg-config
PLUGINDIR = /usr/lib/gstreamer-0.10
POSUB = po
PROFILE_CFLAGS = 
PYTHON = /scratchbox/tools/bin/python
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux2
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 2.3
Q = $(V:1=)
RANLIB = ranlib
SED = /scratchbox/tools/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SIDPLAY_CFLAGS = 
SIDPLAY_LIBS = 
STRIP = strip
TWOLAME_CFLAGS = 
TWOLAME_LIBS = 
USE_NLS = yes
V = @
VALGRIND_CFLAGS = 
VALGRIND_LIBS = 
VALGRIND_PATH = no
VERSION = 0.10.10.2
XGETTEXT = /scratchbox/tools/bin/xgettext
XGETTEXT_015 = /scratchbox/tools/bin/xgettext
XGETTEXT_EXTRA_OPTIONS = 
abs_builddir = /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/docs/plugins
abs_srcdir = /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/docs/plugins
abs_top_builddir = /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2
abs_top_srcdir = /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2
ac_ct_CC = cc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = arm-unknown-linux-gnueabi
build_alias = arm-linux-gnueabi
build_cpu = arm
build_os = linux-gnueabi
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = arm-unknown-linux-gnueabi
host_alias = 
host_cpu = arm
host_os = linux-gnueabi
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = $(SHELL) /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${prefix}/lib/gst-plugins-ugly0.10-rm
localedir = ${datarootdir}/locale
localstatedir = /var
lt_ECHO = echo
mandir = ${prefix}/share/man
mkdir_p = /scratchbox/tools/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/gst-plugins-ugly
pkgpythondir = ${pythondir}/gst-plugins-ugly
plugindir = $(libdir)/gstreamer-0.10
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python2.3/site-packages
pythondir = ${prefix}/lib/python2.3/site-packages
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
shavedir = /home/tom/gst-plugins-ugly0.10-rm-0.10.10.2/common
srcdir = .
sysconfdir = /etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
GST_DOC_SCANOBJ = $(top_srcdir)/common/gstdoc-scangobj

# The name of the module, e.g. 'glib'.
#DOC_MODULE=gst-plugins-libs-0.10
MODULE = gst-plugins-ugly
DOC_MODULE = $(MODULE)-plugins

# for upload.mak
DOC = $(MODULE)-plugins
FORMATS = html

# these variables define the location of the online docs
DOC_SERVER = gstreamer.freedesktop.org
DOC_BASE = /srv/gstreamer.freedesktop.org/www/data/doc
DOC_URL = $(DOC_SERVER):$(DOC_BASE)

# generated basefiles
#basefiles = \
#		$(DOC_MODULE)-sections.txt \
#		$(DOC_MODULE)-docs.sgml

# ugly hack to make -unused.sgml work
#unused-build.stamp:
#	BUILDDIR=`pwd` && \
#	cd $(srcdir)/tmpl && \
#	ln -sf gstreamer-libs-unused.sgml \
#		$$BUILDDIR/tmpl/gstreamer-libs-0.10-unused.sgml
#	touch unused-build.stamp

# these rules are added to create parallel docs using GST_MAJORMINOR
#$(basefiles): gstreamer-libs-0.10%: gstreamer-libs%
#	cp $< $@

#CLEANFILES = $(basefiles)

# The top-level SGML file. Change it if you want.
DOC_MAIN_SGML_FILE = $(DOC_MODULE)-docs.sgml

# The directory containing the source code. Relative to $(top_srcdir).
# gtk-doc will search all .c & .h files beneath here for inline comments
# documenting functions and macros.
DOC_SOURCE_DIR = $(top_srcdir)

# Extra options to supply to gtkdoc-scan.
SCAN_OPTIONS = 

# FIXME :
# there's something wrong with gstreamer-sections.txt not being in the dist
# maybe it doesn't resolve; we're adding it below for now
#EXTRA_DIST = gstreamer.types.in gstreamer.hierarchy $(DOC_MODULE)-sections.txt gstreamer-sections.txt $(DOC_MAIN_SGML_FILE)

# Extra options to supply to gtkdoc-mkdb.
MKDB_OPTIONS = --sgml-mode --source-suffixes=c,h,cc,m

# Extra options to supply to gtkdoc-fixref.
FIXXREF_OPTIONS = --extra-dir=$(GLIB_PREFIX)/share/gtk-doc/html \
	--extra-dir=$(GST_PREFIX)/share/gtk-doc/html


# Used for dependencies.
HFILE_GLOB = $(DOC_SOURCE_DIR)/*/*/*.h
CFILE_GLOB = $(DOC_SOURCE_DIR)/*/*/*.c $(DOC_SOURCE_DIR)/*/*/*.cc

# this is a wingo addition
# thomasvs: another nice wingo addition would be an explanation on why
# this is useful ;)
SCANOBJ_DEPS = 

# Header files to ignore when scanning.
IGNORE_HFILES = 
IGNORE_CFILES = 

# we add all .h files of elements that have signals/args we want
# sadly this also pulls in the private methods - maybe we should
# move those around in the source ?
# also, we should add some stuff here conditionally based on whether
# or not the plugin will actually build
# but I'm not sure about that - it might be this Just Works given that
# the registry won't have the element

# FIXME: not ported yet
#	$(top_srcdir)/ext/gnomevfs/gstgnomevfssink.c 
EXTRA_HFILES = \
	$(top_srcdir)/ext/a52dec/gsta52dec.h \
	$(top_srcdir)/ext/amrnb/amrnbdec.h \
	$(top_srcdir)/ext/amrnb/amrnbenc.h \
	$(top_srcdir)/ext/amrnb/amrnbparse.h \
	$(top_srcdir)/ext/cdio/gstcdiocddasrc.h \
	$(top_srcdir)/ext/lame/gstlame.h \
	$(top_srcdir)/ext/mad/gstmad.h \
	$(top_srcdir)/ext/sidplay/gstsiddec.h \
	$(top_srcdir)/ext/twolame/gsttwolame.h \
	$(top_srcdir)/gst/asfdemux/gstrtspwms.h \
	$(top_srcdir)/gst/mpegaudioparse/gstxingmux.h \
	$(top_srcdir)/gst/realmedia/rademux.h \
	$(top_srcdir)/gst/realmedia/rdtmanager.h \
	$(top_srcdir)/gst/realmedia/rtspreal.h \
	$(top_srcdir)/gst/synaesthesia/gstsynaesthesia.h


# Images to copy into HTML directory.
HTML_IMAGES = 

# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE).
content_files = 

# Other files to distribute.
extra_files = 

# CFLAGS and LDFLAGS for compiling scan program. Only needed if your app/lib
# contains GtkObjects/GObjects and you want to document signals and properties.
GTKDOC_CFLAGS = $(GST_BASE_CFLAGS) -I$(top_builddir)
GTKDOC_LIBS = $(SCANOBJ_DEPS) $(GST_BASE_LIBS)
GTKDOC_CC = $(LIBTOOL) --tag=CC --mode=compile $(CC)
GTKDOC_LD = $(LIBTOOL) --tag=CC --mode=link $(CC)

# If you need to override some of the declarations, place them in this file
# and uncomment this line.
#DOC_OVERRIDES = $(DOC_MODULE)-overrides.txt
DOC_OVERRIDES = 

# We set GPATH here; this gives us semantics for GNU make
# which are more like other make's VPATH, when it comes to
# whether a source that is a target of one rule is then
# searched for in VPATH/GPATH.
#
GPATH = $(srcdir)

# thomas: make docs parallel installable
TARGET_DIR = $(HTML_DIR)/$(DOC_MODULE)-0.10
EXTRA_DIST = \
	scanobj-build.stamp		\
	$(srcdir)/inspect/*.xml		\
	inspect.stamp			\
	inspect-build.stamp		\
	$(SCANOBJ_FILES)		\
	$(content_files)		\
	$(extra_files)			\
	$(HTML_IMAGES)			\
	$(DOC_MAIN_SGML_FILE)	\
	$(DOC_OVERRIDES)		\
	$(DOC_MODULE)-sections.txt

MAINTAINER_DOC_STAMPS = \
	scanobj-build.stamp		\
	inspect-build.stamp		\
	inspect.stamp


# we don't add inspect-build.stamp and scanobj-build.stamp here since they are
# built manually by docs maintainers and result is commited to CVS
DOC_STAMPS = \
	scan-build.stamp		\
	tmpl-build.stamp		\
	sgml-build.stamp		\
	html-build.stamp		\
	scan.stamp			\
	tmpl.stamp			\
	sgml.stamp			\
	html.stamp


# files generated/updated by gtkdoc-scangobj
SCANOBJ_FILES = \
	$(DOC_MODULE).signals           \
        $(DOC_MODULE).hierarchy         \
        $(DOC_MODULE).interfaces        \
        $(DOC_MODULE).prerequisites     \
	$(DOC_MODULE).types		\
        $(DOC_MODULE).args

SCANOBJ_FILES_O = \
	.libs/$(DOC_MODULE)-scan.o


# files generated/updated by gtkdoc-scan
SCAN_FILES = \
	$(DOC_MODULE)-sections.txt	\
	$(DOC_MODULE)-overrides.txt	\
	$(DOC_MODULE)-undocumented.txt	\
	$(DOC_MODULE)-decl.txt		\
	$(DOC_MODULE)-decl-list.txt

REPORT_FILES = \
	$(DOC_MODULE)-undocumented.txt \
	$(DOC_MODULE)-undeclared.txt \
	$(DOC_MODULE)-unused.txt


# FC3 seems to need -scan.c to be part of CLEANFILES for distcheck
# no idea why FC4 can do without
CLEANFILES = \
	$(SCANOBJ_FILES_O) \
	$(DOC_MODULE)-scan.c \
	$(REPORT_FILES) \
	$(DOC_STAMPS) \
	inspect-registry.xml


### inspect GStreamer plug-ins; done by documentation maintainer ###

# only look at the plugins in this module when building inspect .xml stuff
#INSPECT_REGISTRY = $(top_builddir)/docs/plugins/inspect-registry.xml
#INSPECT_ENVIRONMENT = \
#        GST_PLUGIN_SYSTEM_PATH= \
#        GST_PLUGIN_PATH=$(top_builddir)/gst:$(top_builddir)/sys:$(top_builddir)/ext:$(top_builddir)/plugins:$(top_builddir)/src:$(top_builddir)/gnl \
#        GST_REGISTRY=$(INSPECT_REGISTRY)

MAINTAINERCLEANFILES = $(MAINTAINER_DOC_STAMPS)

# wildcard is apparently not portable to other makes, hence the use of find
inspect_files = $(shell find $(srcdir)/inspect -name '*.xml')
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/common/upload-doc.mak $(top_srcdir)/common/gtk-doc-plugins.mak $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  docs/plugins/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  docs/plugins/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile all-local
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-local

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-am

install-exec-am:

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-local

.MAKE: install-am install-strip

.PHONY: all all-am all-local check check-am clean clean-generic \
	clean-libtool clean-local dist-hook distclean \
	distclean-generic distclean-libtool distclean-local distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-data-local install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	uninstall uninstall-am uninstall-local

html: html-build.stamp

upload: $(FORMATS)
	@if test "x$(GST_VERSION_NANO)" = x0; then \
            export DOCVERSION=$(VERSION); \
        else export DOCVERSION=head; \
        fi; \
        export DIR=$(DOC_BASE)/gstreamer/$$DOCVERSION/$(DOC); \
	ssh $(DOC_SERVER) mkdir -p $$DIR; \
	if echo $(FORMATS) | grep html > /dev/null; then export SRC="$$SRC html"; fi; \
	if echo $(FORMATS) | grep ps > /dev/null; then export SRC="$$SRC $(DOC).ps"; fi; \
	if echo $(FORMATS) | grep pdf > /dev/null; then export SRC="$$SRC $(DOC).pdf"; fi; \
	echo Uploading $$SRC to $(DOC_SERVER):$$DIR; \
	rsync -rv -e ssh --delete $$SRC $(DOC_SERVER):$$DIR; \
	ssh $(DOC_SERVER) chmod -R g+w $$DIR; \
	echo Done
	--extra-dir=$(GSTPB_PREFIX)/share/gtk-doc/html

help:
	@echo
	@echo "If you are a doc maintainer, run 'make update' to update"
	@echo "the documentation files maintained in CVS"
	@echo
	@echo Other useful make targets:
	@echo
	@echo  check-inspected-versions: make sure the inspected plugin info
	@echo                            is up to date before a release
	@echo

# update the stuff maintained by doc maintainers
update:
	$(MAKE) inspect-update
	$(MAKE) scanobj-update

#all-local: html-build.stamp

#### scan gobjects; done by documentation maintainer ####
#scanobj-update:
#	-rm scanobj-build.stamp
#	$(MAKE) scanobj-build.stamp

# in the case of non-srcdir builds, the built gst directory gets added
# to gtk-doc scanning; but only then, to avoid duplicates
# FIXME: since we don't have the scan step as part of the build anymore,
# we could remove that
# TODO: finish elite script that updates the output files of this step
# instead of rewriting them, so that multiple maintainers can generate
# a collective set of args and signals
#scanobj-build.stamp: $(SCANOBJ_DEPS) $(basefiles)
#	@echo '*** Scanning GObjects ***'
#	if test x"$(srcdir)" != x. ; then				\
#	    for f in $(SCANOBJ_FILES);					\
#	    do								\
#	        cp $(srcdir)/$$f . ;					\
#	    done;							\
#	else								\
#	    $(INSPECT_ENVIRONMENT) 					\
#	    CC="$(GTKDOC_CC)" LD="$(GTKDOC_LD)"				\
#	    CFLAGS="$(GTKDOC_CFLAGS) $(CFLAGS)"				\
#	    LDFLAGS="$(GTKDOC_LIBS) $(LDFLAGS)"				\
#	    $(GST_DOC_SCANOBJ) --type-init-func="gst_init(NULL,NULL)"	\
#	        --module=$(DOC_MODULE) --source=$(PACKAGE) &&		\
#		$(PYTHON)						\
#		$(top_srcdir)/common/scangobj-merge.py $(DOC_MODULE);	\
#	fi
#	touch scanobj-build.stamp

#$(DOC_MODULE)-decl.txt $(SCANOBJ_FILES) $(SCANOBJ_FILES_O): scan-build.stamp
#	@true

# update the element and plugin XML descriptions; store in inspect/
#inspect:
#	mkdir inspect

#inspect-update: inspect
#	-rm -f $(INSPECT_REGISTRY) inspect-build.stamp
#	$(MAKE) inspect-build.stamp

# FIXME: inspect.stamp should be written to by gst-xmlinspect.py
# IF the output changed; see gtkdoc-mktmpl
#inspect-build.stamp:
#	@echo '*** Rebuilding plugin inspection files ***'
#	if test x"$(srcdir)" != x. ; then \
#	    cp $(srcdir)/inspect.stamp . ; \
#	    cp $(srcdir)/inspect-build.stamp . ; \
#	else \
#	    $(INSPECT_ENVIRONMENT) $(PYTHON) \
#	        $(top_srcdir)/common/gst-xmlinspect.py $(PACKAGE) inspect && \
#	    echo -n "timestamp" > inspect.stamp && \
#	    touch inspect-build.stamp; \
#        fi

### scan headers; done on every build ###
#scan-build.stamp: $(HFILE_GLOB) $(EXTRA_HFILES) $(basefiles) scanobj-build.stamp inspect-build.stamp
#	if test "x$(top_srcdir)" != "x$(top_builddir)" &&		\
#	   test -d "$(top_builddir)/gst";				\
#        then								\
#            export BUILT_OPTIONS="--source-dir=$(top_builddir)/gst";	\
#        fi;								\
#	gtkdoc-scan							\
#	    $(SCAN_OPTIONS) $(EXTRA_HFILES)				\
#	    --module=$(DOC_MODULE)					\
#	    $$BUILT_OPTIONS						\
#	    --ignore-headers="$(IGNORE_HFILES)";			\
#	touch scan-build.stamp

#### update templates; done on every build ####

### FIXME: make this error out again when docs are fixed for 0.9
# in a non-srcdir build, we need to copy files from the previous step
# and the files from previous runs of this step
#tmpl-build.stamp: $(DOC_MODULE)-decl.txt $(SCANOBJ_FILES) $(DOC_MODULE)-sections.txt $(DOC_OVERRIDES)
#	@echo '*** Rebuilding template files ***'
#	if test x"$(srcdir)" != x. ; then				\
#	    for f in $(SCANOBJ_FILES) $(SCAN_FILES);			\
#	    do								\
#	        if test -e $(srcdir)/$$f; then cp $(srcdir)/$$f . ; fi; \
#	    done;							\
#	fi
#	gtkdoc-mktmpl --module=$(DOC_MODULE) | tee tmpl-build.log
#	$(PYTHON) \
#		$(top_srcdir)/common/mangle-tmpl.py $(srcdir)/inspect tmpl
#	@cat $(DOC_MODULE)-unused.txt
#	rm -f tmpl-build.log
#	touch tmpl-build.stamp

#tmpl.stamp: tmpl-build.stamp
#	@true

#### build xml; done on every build ####

### FIXME: make this error out again when docs are fixed for 0.9
#sgml-build.stamp: tmpl.stamp inspect.stamp $(CFILE_GLOB) $(top_srcdir)/common/plugins.xsl $(expand_content_files)
#	@echo '*** Building XML ***'
#	@-mkdir -p xml
#	@for a in $(srcdir)/inspect/*.xml; do \
#            xsltproc --stringparam module $(MODULE) \
#		$(top_srcdir)/common/plugins.xsl $$a > xml/`basename $$a`; done
#	@for f in $(EXAMPLE_CFILES); do \
#		$(PYTHON) $(top_srcdir)/common/c-to-xml.py $$f > xml/element-`basename $$f .c`.xml; done
#	gtkdoc-mkdb \
#		--module=$(DOC_MODULE) \
#		--source-dir=$(DOC_SOURCE_DIR) \
#                 --expand-content-files="$(expand_content_files)" \
#		--main-sgml-file=$(srcdir)/$(DOC_MAIN_SGML_FILE) \
#		--output-format=xml \
#		--ignore-files="$(IGNORE_HFILES) $(IGNORE_CFILES)" \
#		$(MKDB_OPTIONS) \
#		| tee sgml-build.log
#	@if grep "WARNING:" sgml-build.log > /dev/null; then true; fi # exit 1; fi
#	cp ../version.entities xml
#	rm sgml-build.log
#	touch sgml-build.stamp

#sgml.stamp: sgml-build.stamp
#	@true

#### build html; done on every step ####

#html-build.stamp: sgml.stamp $(DOC_MAIN_SGML_FILE) $(content_files)
#	@echo '*** Building HTML ***'
#	if test -d html; then rm -rf html; fi
#	mkdir html
#	cp $(srcdir)/$(DOC_MAIN_SGML_FILE) html
#	@for f in $(content_files); do cp $(srcdir)/$$f html; done
#	cp -pr xml html
#	cp ../version.entities html
#	cd html && gtkdoc-mkhtml $(DOC_MODULE) $(DOC_MAIN_SGML_FILE) \
#	    2>&1 | tee ../html-build.log
#	@if grep "warning:" html-build.log > /dev/null; then \
#		echo "ERROR"; grep "warning:" html-build.log; exit 1; fi
#	@rm html-build.log
#	mv html/index.sgml html/index.sgml.bak
#	$(SED) "s/ href=\"$(DOC_MODULE)\// href=\"$(DOC_MODULE)-0.10\//g" html/index.sgml.bak >html/index.sgml
#	rm -f html/index.sgml.bak
#	rm -f html/$(DOC_MAIN_SGML_FILE)
#	rm -rf html/xml
#	rm -f html/version.entities
#	test "x$(HTML_IMAGES)" = "x" || for i in "" $(HTML_IMAGES) ; do \
#	    if test "$$i" != ""; then cp $(srcdir)/$$i html ; fi; done
#	@echo '-- Fixing Crossreferences' 
#	gtkdoc-fixxref --module=$(DOC_MODULE) --module-dir=html --html-dir=$(HTML_DIR) $(FIXXREF_OPTIONS)
#	touch html-build.stamp

#clean-local-gtkdoc:
#	rm -rf xml tmpl html
# clean files copied for nonsrcdir templates build
#	if test x"$(srcdir)" != x. ; then \
#	    rm -rf $(SCANOBJ_FILES) $(SCAN_FILES); \
#	fi
all-local:
clean-local-gtkdoc:

clean-local: clean-local-gtkdoc
	rm -f *~ *.bak
	rm -rf .libs

distclean-local:
	rm -rf tmpl/*.sgml.bak
	rm -rf *.o

# thomas: make docs parallel installable; devhelp requires majorminor too
install-data-local:
	(installfiles=`echo $(srcdir)/html/*.sgml $(srcdir)/html/*.html $(srcdir)/html/*.png $(srcdir)/html/*.css`; \
	if test "$$installfiles" = '$(srcdir)/html/*.sgml $(srcdir)/html/*.html $(srcdir)/html/*.png $(srcdir)/html/*.css'; \
	then echo '-- Nothing to install' ; \
	else \
          $(mkinstalldirs) $(DESTDIR)$(TARGET_DIR); \
	  for i in $$installfiles; do \
	    echo '-- Installing '$$i ; \
	    $(INSTALL_DATA) $$i $(DESTDIR)$(TARGET_DIR); \
	  done; \
	  pngfiles=`echo ./html/*.png`; \
	  if test "$$pngfiles" != './html/*.png'; then \
	    for i in $$pngfiles; do \
	      echo '-- Installing '$$i ; \
	      $(INSTALL_DATA) $$i $(DESTDIR)$(TARGET_DIR); \
	    done; \
	  fi; \
	  echo '-- Installing $(srcdir)/html/$(DOC_MODULE).devhelp' ; \
	  $(INSTALL_DATA) $(srcdir)/html/$(DOC_MODULE).devhelp \
	    $(DESTDIR)$(TARGET_DIR)/$(DOC_MODULE)-0.10.devhelp; \
	  if test -e $(srcdir)/html/$(DOC_MODULE).devhelp2; then \
        	    $(INSTALL_DATA) $(srcdir)/html/$(DOC_MODULE).devhelp2 \
	           $(DESTDIR)$(TARGET_DIR)/$(DOC_MODULE)-0.10.devhelp2; \
	  fi; \
	  (which gtkdoc-rebase >/dev/null && \
	    gtkdoc-rebase --relative --dest-dir=$(DESTDIR) --html-dir=$(DESTDIR)$(TARGET_DIR)) || true ; \
	fi) 
uninstall-local:
	if test -d $(DESTDIR)$(TARGET_DIR); then \
	  rm -rf $(DESTDIR)$(TARGET_DIR)/*; \
	  rmdir -p $(DESTDIR)$(TARGET_DIR) 2>/dev/null || true; \
	else \
	  echo '-- Nothing to uninstall' ; \
	fi;

#
# Checks
#
check-hierarchy: $(DOC_MODULE).hierarchy
	@if grep '	' $(DOC_MODULE).hierarchy; then \
	    echo "$(DOC_MODULE).hierarchy contains tabs, please fix"; \
	    /bin/false; \
	fi

check: check-hierarchy

check-inspected-versions:
	@echo Checking plugin versions of inspected plugin data ...; \
	fail=0 ; \
	for each in $(inspect_files) ; do \
	  if (grep -H '<version>' $$each | grep -v '<version>$(VERSION)'); then \
	    echo $$each should be fixed to say version $(VERSION) or be removed ; \
	    echo "sed -i -e 's/<version.*version>/<version>$(VERSION)<\/version>/'" $$each; \
	    echo ; \
	    fail=1; \
	  fi ; \
	done ; \
	exit $$fail

#
# Require gtk-doc when making dist
#
#dist-check-gtkdoc:
dist-check-gtkdoc:
	@echo "*** gtk-doc must be installed and enabled in order to make dist"
	@false

# FIXME: decide whether we want to dist generated html or not
dist-hook: dist-check-gtkdoc dist-hook-local
	mkdir $(distdir)/html
	cp $(srcdir)/html/* $(distdir)/html
	-cp $(srcdir)/$(DOC_MODULE).types $(distdir)/
	-cp $(srcdir)/$(DOC_MODULE)-sections.txt $(distdir)/
	cd $(distdir) && rm -f $(DISTCLEANFILES)
        -gtkdoc-rebase --online --relative --html-dir=$(distdir)/html

.PHONY : dist-hook-local docs
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
